{"remainingRequest":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/src/components/IPCameraDashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/src/components/IPCameraDashboard.vue","mtime":1632663144552},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/babel-loader/lib/index.js","mtime":1587543893999},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js","mtime":1570969765705}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Map from \"./Map\";\nimport HomeForElderlyMap from \"./HomeForElderlyMap\";\n\nexport default {\n    name: \"IPCameraDashboard\",\n    components: {\n        Map,\n        HomeForElderlyMap\n    },\n    created() {\n        // this.fetchLocationData();\n    },\n    data() {\n        return {\n\n            locations: [\n                {name: \"ipCamera01\", address: \"home for elderly\", room: \"1\", location: \"-\"},\n                {name: \"ipCamera02\", address: \"home for elderly\", room: \"2\", location: \"-\"},\n                {name: \"ipCamera03\", address: \"home for elderly\", room: \"3\", location: \"-\"},\n                {name: \"ipCamera04\", address: \"home for elderly\", room: \"4\", location: \"-\"},\n                {name: \"ipCamera05\", address: \"home for elderly\", room: \"5\", location: \"-\"},\n                {name: \"ipCamera06\", address: \"home for elderly\", room: \"6\", location: \"-\"},\n                {name: \"ipCamera07\", address: \"home for elderly\", room: \"7\", location: \"-\"},\n                {name: \"ipCamera08\", address: \"home for elderly\", room: \"8\", location: \"-\"},\n                {name: \"ipCamera09\", address: \"home for elderly\", room: \"9\", location: \"-\"}\n            ],\n            loading: false,\n            options: [{\n                value: 'Option1',\n                label: 'Home For Elderly People'\n            }, {\n                value: 'Option2',\n                label: 'LivingLab'\n            }],\n            value: 'Option1',\n            optionsCamera: [{\n                value: 'Option1',\n                label: 'Camera1'\n            }, {\n                value: 'Option2',\n                label: 'Camera2'\n            },{\n                value: 'Option3',\n                label: 'Camera3'\n            }, {\n                value: 'Option4',\n                label: 'Camera4'\n            },{\n                value: 'Option5',\n                label: 'Camera5'\n            }, {\n                value: 'Option6',\n                label: 'Camera6'\n            },{\n                value: 'Option7',\n                label: 'Camera7'\n            }, {\n                value: 'Option8',\n                label: 'Camera8'\n            },{\n                value: 'Option9',\n                label: 'Camera9'\n            }],\n            valueCamera: 'Option1'\n        };\n    },\n    methods: {\n        async fetchLocationData() {\n            this.loading = true;\n\n            const response = await fetch(`http://192.241.213.72:4000/graphql`, {\n                    method: \"POST\",\n                    headers: { Accept: \"application/json\",  \"Content-Type\":\"application/json\"},\n                    body: JSON.stringify({ query: `{ ipCamera { name address room location }}`})\n                }\n            );\n\n            if (!response.ok) {\n                // this.error = response.statusText;\n            } else {\n                const res = await response.json();\n                if(res.hasOwnProperty('errors')) {\n                    this.locations = []\n                } else {\n                    const locations = await res.data['ipCamera'];\n\n                    if(Array.isArray(locations)) {\n                        this.locations = locations\n                    } else {\n                        this.locations = [locations]\n                    }\n\n                    this.loading = false;\n                }\n            }\n        }\n    }\n}\n",{"version":3,"sources":["IPCameraDashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"IPCameraDashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <h2>IP Camera Dashboard</h2>\n        <h3>Video Monitoring</h3>\n        <el-select v-model=\"valueCamera\" placeholder=\"Select\" style=\"padding-bottom: 1em; width: 240px;\">\n            <el-option\n                    v-for=\"item in optionsCamera\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n            </el-option>\n        </el-select>\n        <div>\n            <video width=\"100%\" controls>\n                <source src=\"mov_bbb.mp4\" type=\"video/mp4\">\n                <source src=\"mov_bbb.ogg\" type=\"video/ogg\">\n                Your browser does not support HTML5 video.\n            </video>\n        </div>\n        <h3>Building Details</h3>\n        <el-select v-model=\"value\" placeholder=\"Select\" style=\"padding-bottom: 1em; width: 240px;\">\n            <el-option\n                    v-for=\"item in options\"\n                    :key=\"item.value\"\n                    :label=\"item.label\"\n                    :value=\"item.value\">\n            </el-option>\n        </el-select>\n        <HomeForElderlyMap></HomeForElderlyMap>\n\n        <h3>Location</h3>\n        <Map v-if=\"!loading\" v-bind:locations=\"locations\"></Map>\n    </div>\n</template>\n\n<script>\n    import Map from \"./Map\";\n    import HomeForElderlyMap from \"./HomeForElderlyMap\";\n\n    export default {\n        name: \"IPCameraDashboard\",\n        components: {\n            Map,\n            HomeForElderlyMap\n        },\n        created() {\n            // this.fetchLocationData();\n        },\n        data() {\n            return {\n\n                locations: [\n                    {name: \"ipCamera01\", address: \"home for elderly\", room: \"1\", location: \"-\"},\n                    {name: \"ipCamera02\", address: \"home for elderly\", room: \"2\", location: \"-\"},\n                    {name: \"ipCamera03\", address: \"home for elderly\", room: \"3\", location: \"-\"},\n                    {name: \"ipCamera04\", address: \"home for elderly\", room: \"4\", location: \"-\"},\n                    {name: \"ipCamera05\", address: \"home for elderly\", room: \"5\", location: \"-\"},\n                    {name: \"ipCamera06\", address: \"home for elderly\", room: \"6\", location: \"-\"},\n                    {name: \"ipCamera07\", address: \"home for elderly\", room: \"7\", location: \"-\"},\n                    {name: \"ipCamera08\", address: \"home for elderly\", room: \"8\", location: \"-\"},\n                    {name: \"ipCamera09\", address: \"home for elderly\", room: \"9\", location: \"-\"}\n                ],\n                loading: false,\n                options: [{\n                    value: 'Option1',\n                    label: 'Home For Elderly People'\n                }, {\n                    value: 'Option2',\n                    label: 'LivingLab'\n                }],\n                value: 'Option1',\n                optionsCamera: [{\n                    value: 'Option1',\n                    label: 'Camera1'\n                }, {\n                    value: 'Option2',\n                    label: 'Camera2'\n                },{\n                    value: 'Option3',\n                    label: 'Camera3'\n                }, {\n                    value: 'Option4',\n                    label: 'Camera4'\n                },{\n                    value: 'Option5',\n                    label: 'Camera5'\n                }, {\n                    value: 'Option6',\n                    label: 'Camera6'\n                },{\n                    value: 'Option7',\n                    label: 'Camera7'\n                }, {\n                    value: 'Option8',\n                    label: 'Camera8'\n                },{\n                    value: 'Option9',\n                    label: 'Camera9'\n                }],\n                valueCamera: 'Option1'\n            };\n        },\n        methods: {\n            async fetchLocationData() {\n                this.loading = true;\n\n                const response = await fetch(`http://192.241.213.72:4000/graphql`, {\n                        method: \"POST\",\n                        headers: { Accept: \"application/json\",  \"Content-Type\":\"application/json\"},\n                        body: JSON.stringify({ query: `{ ipCamera { name address room location }}`})\n                    }\n                );\n\n                if (!response.ok) {\n                    // this.error = response.statusText;\n                } else {\n                    const res = await response.json();\n                    if(res.hasOwnProperty('errors')) {\n                        this.locations = []\n                    } else {\n                        const locations = await res.data['ipCamera'];\n\n                        if(Array.isArray(locations)) {\n                            this.locations = locations\n                        } else {\n                            this.locations = [locations]\n                        }\n\n                        this.loading = false;\n                    }\n                }\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n"]}]}