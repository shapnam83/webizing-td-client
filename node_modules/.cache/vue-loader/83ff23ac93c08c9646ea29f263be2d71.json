{"remainingRequest":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/src/components/TDConfiguration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/src/components/TDConfiguration.vue","mtime":1632786913034},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/babel-loader/lib/index.js","mtime":1587543893999},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js","mtime":1570969765705}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VJsoneditor from \"v-jsoneditor\";\n\nexport default {\n  name: \"TDConfiguration\",\n  components: {\n    VJsoneditor,\n  },\n  data() {\n    return {\n      selEditValue: '',\n      form: {\n        \"@context\": \"\",\n        \"@type\": '',\n        thingName: \"\",\n        title: \"\",\n        titles: [{}],\n        properties: [],\n        actions: [],\n        events: [],\n        description: \"\",\n        descriptions: [{}],\n        base: \"\",\n        links: \"\",\n        security: [],\n        forms: [],\n        securityDefinitions: [{}],\n      },\n      locsec: [\n        { value: \"header\", label: \"header\" },\n        { value: \"query\", label: \"query\" },\n        { value: \"body\", label: \"body\" },\n        { value: \"cookie\", label: \"cookie\" },\n      ],\n      lng: [\n        { value: \"ar-SA\", label: \"Arabic Saudi Arabia\" },\n        { value: \"cs-CZ\", label: \"Czech Czech Republic\" },\n        { value: \"da-DK\", label: \"Danish Denmark\" },\n        { value: \"de-DE\", label: \"German Germany\" },\n        { value: \"el-GR\", label: \"Modern Greek Greece\" },\n        { value: \"en-AU\", label: \"English Australia\" },\n        { value: \"en-GB\", label: \"English United Kingdom\" },\n        { value: \"en-IE\", label: \"English Ireland\" },\n        { value: \"en-US\", label: \"English United States\" },\n        { value: \"en-ZA\", label: \"English South Africa\" },\n        { value: \"es-ES\", label: \"Spanish Spain\" },\n        { value: \"es-MX\", label: \"Spanish Mexico\" },\n        { value: \"fi-FI\", label: \"Finnish Finland\" },\n        { value: \"fr-CA\", label: \"French Canada\" },\n        { value: \"fr-FR\", label: \"French France\" },\n        { value: \"he-IL\", label: \"Hebrew Israel\" },\n        { value: \"hi-IN\", label: \"Hindi India\" },\n        { value: \"hu-HU\", label: \"Hungarian Hungary\" },\n        { value: \"id-ID\", label: \"Indonesian Indonesia\" },\n        { value: \"it-IT\", label: \"Italian Italy\" },\n        { value: \"ja-JP\", label: \"Japanese Japan\" },\n        { value: \"ko-KR\", label: \"Korean Republic of Korea\" },\n        { value: \"nl-BE\", label: \"Dutch Belgium\" },\n        { value: \"nl-NL\", label: \"Dutch Netherlands\" },\n        { value: \"no-NO\", label: \"Norwegian Norway\" },\n        { value: \"pl-PL\", label: \"Polish Poland\" },\n        { value: \"pt-BR\", label: \"Portuguese Brazil\" },\n        { value: \"pt-PT\", label: \"Portuguese Portugal\" },\n        { value: \"ro-RO\", label: \"Romanian Romania\" },\n        { value: \"ru-RU\", label: \"Russian Russian Federation\" },\n        { value: \"sk-SK\", label: \"Slovak Slovakia\" },\n        { value: \"sv-SE\", label: \"Swedish Sweden\" },\n        { value: \"th-TH\", label: \"Thai Thailand\" },\n        { value: \"tr-TR\", label: \"Turkish Turkey\" },\n        { value: \"zh-CN\", label: \"Chinese China\" },\n        { value: \"zh-HK\", label: \"Chinese Hong Kong\" },\n        { value: \"zh-TW\", label: \"Chinese Taiwan\" },\n      ],\n      security: [\n        { value: \"nosec_sc\", label: \"No authentication\" },\n        { value: \"basic_sc\", label: \"Basic\" },\n        { value: \"digest_sc\", label: \"Digest Access\" },\n        { value: \"apikey_sc\", label: \"API key\" },\n        { value: \"bearer_sc\", label: \"Bearer Token\" },\n        { value: \"psk_sc\", label: \"Pre-shared key\" },\n        { value: \"oauth2_sc\", label: \"OAuth2\" },\n      ],\n    };\n  },\n  created() {\n      this.form = this.mapperTDtoForm\n  },\n  computed: {\n    things() {\n      return this.$store.getters.getThings();\n    },\n    \n    listEditableThings() {\n        const things = [];\n        const tds = this.$store.getters.getThings()\n\n        for (const key of Object.keys(tds)) {\n            things.push({value: key, label: key}) \n        }\n\n        return things\n    },\n    \n    mapperTDfromForm() {\n      const form = this.form;\n\n      const tdObj = {};\n      tdObj.version = {};\n      tdObj.version.instance = form.version;\n\n      tdObj.name = form.name;\n      tdObj[\"@context\"] = [];\n      tdObj[\"@context\"].push(form[\"@context\"]);\n      tdObj[\"@type\"] = form[\"@type\"];\n      tdObj.thingName = form.thingName;\n      tdObj.title = form.title;\n      tdObj.titles = form.titles;\n      tdObj.forms = form.forms;\n      tdObj.description = form.description;\n      tdObj.descriptions = form.descriptions;\n      tdObj.base = form.base;\n      tdObj.links = form.links;\n      tdObj.forms = form.forms;\n      tdObj.security = form.security;\n\n      tdObj.securityDefinitions = {};\n      for (const key in form.securityDefinitions) {\n        tdObj.securityDefinitions[form.securityDefinitions[key].scheme] = form.securityDefinitions[\n          key\n        ];\n      }\n\n      tdObj.properties = {};\n      for (const key in form.properties) {\n        tdObj.properties[form.properties[key].name] = form.properties[\n          key\n        ];\n      }\n\n      if (form.actions.length > 0) {\n        tdObj.actions = {};\n        for (const key in form.actions) {\n          tdObj.actions[form.actions[key].name] = form.actions[key];\n        }\n      }\n\n      if (form.events.length > 0) {\n        tdObj.events = {};\n        for (const key in form.events) {\n          tdObj.events[form.events[key].name] = form.events[key];\n        }\n      }\n\n      return tdObj;\n    },\n    mapperTDtoForm() {\n      const tdObj = {};\n      //const form = this.mapperTDfromForm;\n      const form = this.$store.getters.getThings()[this.selEditValue]\n      console.log('mapperTDtoForm')\n      console.log(form)\n      tdObj.version = form.version.instance;\n\n      tdObj.name =form.name\n\n    //   tdObj[\"@type\"] = form[\"@type\"][0]\n      tdObj[\"@context\"] = form[\"@context\"]\n\n      tdObj.thingName = form.name;\n      tdObj.title = form.title;\n      tdObj.titles = [{}];\n      tdObj.forms = form.forms;\n      tdObj.description = form.description;\n      tdObj.descriptions = [{}];\n      tdObj.base = form.base;\n      tdObj.links = form.links;\n      tdObj.forms = form.forms;\n      tdObj.security = form.security;\n\n      tdObj.securityDefinitions = [];\n      for (const key of Object.keys(form.securityDefinitions)) {\n          tdObj.securityDefinitions.push(form.securityDefinitions[key])\n      }\n\n      tdObj.properties = [];\n\n     \nfor (const key of Object.keys(form.properties)) {\n          const properties = form.properties[key];\n          properties.name = key\n          tdObj.properties.push(properties)\n      }\n      \n      \n\n      tdObj.actions = [];\n      if (form.hasOwnProperty('actions')) {\n        for (const key of Object.keys(form.actions)) {\n            const actions = form.actions[key];\n          actions.name = key\n          tdObj.actions.push(actions)\n        }\n      }\n      \n\n      tdObj.events = [];\n      if (form.hasOwnProperty('events')) {\n        for (const key of Object.keys(form.events)) {\n            const events = form.events[key];\n          events.name = key\n            tdObj.events.push(events)\n        }\n      }\n\n      return tdObj;\n    }\n  },\n  methods: {\n    onSubmit() {\n      const pr = this.mapperTDfromForm.thingName;\n      const obj2 = this.mapperTDfromForm;\n      const o = {};\n      o[pr] = obj2;\n      \n    fetch('http://localhost:4000/thing/td', {\n  method: 'POST', // or 'PUT'\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({data: o}),\n})\n.then(response => response.json())\n.then(data => {\n    this.$store.dispatch('fetchThings');\n    this.$router.push({ path: `/` })\n  console.log('Success:', data);\n})\n.catch((error) => {\n  console.error('Error:', error);\n});\n        \n    },\n    removeProperty(item) {\n      var index = this.form.properties.indexOf(item);\n      if (index !== -1) {\n        this.form.properties.splice(index, 1);\n      }\n    },\n    addProperty() {\n      this.form.properties.push({ readOnly: true, forms: [] });\n    },\n    addPropertyForm(index) {\n      this.form.properties[index].forms.push({});\n    },\n    removePropertyForm(index, item) {\n      var ind = this.form.properties[index].forms.indexOf(item);\n      if (ind !== -1) {\n        this.form.properties[index].forms.splice(ind, 1);\n      }\n    },\n    addActionForm(index) {\n      this.form.actions[index].forms.push({});\n    },\n    removeActionForm(index, item) {\n      var ind = this.form.actions[index].forms.indexOf(item);\n      if (ind !== -1) {\n        this.form.actions[index].forms.splice(ind, 1);\n      }\n    },\n    addEventForm(index) {\n      this.form.events[index].forms.push({});\n    },\n    removeEventForm(index, item) {\n      var ind = this.form.events[index].forms.indexOf(item);\n      if (ind !== -1) {\n        this.form.events[index].forms.splice(ind, 1);\n      }\n    },\n    addActions() {\n      this.form.actions.push({ forms: [] });\n    },\n    addForm(index) {\n      this.form.forms.push({});\n    },\n    removeForm(index, item) {\n      var ind = this.form.forms.indexOf(item);\n      if (ind !== -1) {\n        this.form.forms.splice(ind, 1);\n      }\n    },\n    removeAction(item) {\n      var index = this.form.actions.indexOf(item);\n      if (index !== -1) {\n        this.form.actions.splice(index, 1);\n      }\n    },\n    addEvents() {\n      this.form.events.push({ forms: [] });\n    },\n    removeEvent(item) {\n      var index = this.form.events.indexOf(item);\n      if (index !== -1) {\n        this.form.events.splice(index, 1);\n      }\n    },\n    addDescriptions() {\n      this.form.descriptions.push({});\n    },\n    removeDescriptions(item) {\n      var index = this.form.descriptions.indexOf(item);\n      if (index !== -1) {\n        this.form.descriptions.splice(index, 1);\n      }\n    },\n    addTitles() {\n      this.form.titles.push({});\n    },\n    removeTitles(item) {\n      var index = this.form.titles.indexOf(item);\n      if (index !== -1) {\n        this.form.titles.splice(index, 1);\n      }\n    },\n    addSecurityDefinitions() {\n      this.form.securityDefinitions.push({});\n    },\n    removeSecurityDefinitions(item) {\n      var index = this.form.securityDefinitions.indexOf(item);\n      if (index !== -1) {\n        this.form.securityDefinitions.splice(index, 1);\n      }\n    },\n    selectEDit(){\n        this.form = this.mapperTDtoForm\n    },\n    selectDef(){\n        this.form = {\n        \"@context\": \"\",\n        \"@type\": '',\n        thingName: \"\",\n        title: \"\",\n        titles: [{}],\n        properties: [],\n        actions: [],\n        events: [],\n        forms: [],\n        description: \"\",\n        descriptions: [{}],\n        base: \"\",\n        links: \"\",\n        security: [],\n        forms: [],\n        securityDefinitions: [{}],\n      }\n    }\n  },\n};\n",{"version":3,"sources":["TDConfiguration.vue"],"names":[],"mappingsfile":"TDConfiguration.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-form ref=\"form\" :model=\"form\" label-width=\"160px\">\n    <span>Edit Things</span>\n\n    <el-form-item label=\"Thing name\">\n      <el-select\n        style=\"width: 100%;\"\n        v-model=\"selEditValue\"\n        placeholder=\"select thing\"\n      >\n        <el-option\n          v-for=\"sec in listEditableThings\"\n          :key=\"sec.value\"\n          :label=\"sec.label\"\n          :value=\"sec.value\"\n        ></el-option>\n      </el-select>\n      \n      <el-button style=\"margin-top: 2px;\" @click=\"selectEDit()\">Edit</el-button>\n      <el-button type=\"danger\" @click=\"selectDef()\">Cancel</el-button>\n    </el-form-item>\n\n    <span>Thing Core</span>\n    <el-divider></el-divider>\n    <!-- @name -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"ex. Apple Watch, Air Quiality etc.. (don't use spaces in name field)\"\n      placement=\"top-start\"\n    >\n      <el-form-item label=\"Unique URL name\">\n        <el-input v-model=\"form.thingName\" placeholder=\"thingName\"></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @name -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"ex. Apple Watch, Air Quiality etc..\"\n      placement=\"top-start\"\n    >\n      <el-form-item label=\"name\">\n        <el-input v-model=\"form.name\" placeholder=\"name\"></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @context -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"JSON-LD keyword to define short-hand names called terms that are used throughout a TD document | anyURI or Array\"\n      placement=\"top-start\"\n    >\n      <el-form-item required label=\"JSON-LD keyword\">\n        <el-input v-model=\"form['@context']\" placeholder=\"@context\"></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @type -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"JSON-LD keyword to label the object with semantic tags (or types) | string or Array of string\"\n      placement=\"top-start\"\n    >\n      <el-form-item required label=\"Type\">\n        <el-input v-model=\"form['@type']\" placeholder=\"@type\"></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @title -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      :hide-after=\"10000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"Provides a human-readable title (e.g., display a text for UI representation) based on a default language | string\"\n      placement=\"top-start\"\n    >\n      <el-form-item required label=\"Title\">\n        <el-input v-model=\"form.title\" placeholder=\"title\"></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @titles -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      :hide-after=\"10000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"\tProvides multi-language human-readable titles (e.g., display a text for UI representation in different languages) | MultiLanguage\"\n      placement=\"top-start\"\n    >\n      <el-form-item label=\"Titles\">\n        <div v-for=\"(title, index) in form.titles\" :key=\"index\">\n          <el-input\n            placeholder=\"Please input\"\n            v-model=\"title.desciption\"\n            class=\"input-with-select\"\n            style=\"padding-bottom: 2px;\"\n          >\n            <el-select\n              v-model=\"title.language\"\n              slot=\"prepend\"\n              placeholder=\"Select\"\n              style=\"width: 260px;\"\n            >\n              <el-option\n                v-for=\"l in lng\"\n                :key=\"l.language\"\n                :label=\"l.label\"\n                :value=\"l.value\"\n              ></el-option>\n            </el-select>\n\n            <el-button\n              v-if=\"index == 0\"\n              @click=\"addTitles(index)\"\n              slot=\"append\"\n              icon=\"el-icon-circle-plus-outline\"\n            ></el-button>\n            <el-button\n              v-else\n              @click=\"removeTitles(title)\"\n              slot=\"append\"\n              icon=\"el-icon-remove-outline\"\n            ></el-button>\n          </el-input>\n        </div>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @description -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      :hide-after=\"10000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"Provides additional (human-readable) information based on a default language | string\"\n      placement=\"top-start\"\n    >\n      <el-form-item label=\"Description\">\n        <el-input\n          v-model=\"form.description\"\n          placeholder=\"desciption\"\n        ></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @descriptions -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      :hide-after=\"10000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"Can be used to support (human-readable) information in different languages | MultiLanguage\"\n      placement=\"top-start\"\n    >\n      <el-form-item label=\"Descriptions\">\n        <div v-for=\"(desc, index) in form.descriptions\" :key=\"index\">\n          <el-input\n            placeholder=\"Please input\"\n            v-model=\"desc.desciption\"\n            class=\"input-with-select\"\n            style=\"padding-bottom: 2px;\"\n          >\n            <el-select\n              v-model=\"desc.language\"\n              slot=\"prepend\"\n              placeholder=\"Select\"\n              style=\"width: 260px;\"\n            >\n              <el-option\n                v-for=\"l in lng\"\n                :key=\"l.language\"\n                :label=\"l.label\"\n                :value=\"l.value\"\n              ></el-option>\n            </el-select>\n\n            <el-button\n              v-if=\"index == 0\"\n              @click=\"addDescriptions(index)\"\n              slot=\"append\"\n              icon=\"el-icon-circle-plus-outline\"\n            ></el-button>\n            <el-button\n              v-else\n              @click=\"removeDescriptions(desc)\"\n              slot=\"append\"\n              icon=\"el-icon-remove-outline\"\n            ></el-button>\n          </el-input>\n        </div>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @version -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      :hide-after=\"10000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"Provides version information | VersionInfo\"\n      placement=\"top-start\"\n    >\n      <el-form-item label=\"Version\">\n        <el-input v-model=\"form.version\" placeholder=\"version\"></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @base -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      :hide-after=\"10000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"Define the base URI that is used for all relative URI references throughout a TD document. In TD instances, all relative URIs are resolved relative to the base URI using the algorithm | anyURI\"\n      placement=\"top-start\"\n    >\n      <el-form-item label=\"Base\">\n        <el-input v-model=\"form.base\" placeholder=\"base\"></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <!-- @links -->\n    <el-tooltip\n      :open-delay=\"1000\"\n      :hide-after=\"10000\"\n      class=\"item\"\n      effect=\"dark\"\n      content=\"Provides Web links to arbitrary resources that relate to the specified Thing Description | Array of Link\"\n      placement=\"top-start\"\n    >\n      <el-form-item label=\"Links\">\n        <el-input v-model=\"form.links\" placeholder=\"links\"></el-input>\n      </el-form-item>\n    </el-tooltip>\n\n    <span>Thing Properties</span>\n    <el-divider></el-divider>\n\n    <el-form\n      v-for=\"(property, index) in form.properties\"\n      :key=\"property.key\"\n      :prop=\"'properties.' + index + '.value'\"\n      ref=\"form\"\n      :model=\"form\"\n      label-width=\"160px\"\n    >\n      <br /><span>property {{ index + 1 }} </span>\n      <el-button\n        type=\"danger\"\n        style=\"padding-left: 10px;\"\n        size=\"mini\"\n        @click.prevent=\"removeProperty(property)\"\n        >delete</el-button\n      >\n      <br />\n      <el-form-item label=\"Property name\">\n        <el-input v-model=\"property.name\" placeholder=\"name\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"Property title\">\n        <el-input v-model=\"property.title\" placeholder=\"title\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"Property description\">\n        <el-input\n          v-model=\"property.description\"\n          placeholder=\"description\"\n        ></el-input>\n      </el-form-item>\n\n      <el-form\n        v-for=\"(form, ind) in property.forms\"\n        :key=\"'forms.' + ind + '.value'\"\n        :prop=\"'forms.' + ind + '.value'\"\n        ref=\"form\"\n        :model=\"form\"\n        label-width=\"160px\"\n      >\n        <br /><span>property {{index + 1}} form {{ ind + 1 }} </span>\n        <el-button\n          type=\"danger\"\n          style=\"padding-left: 10px;\"\n          size=\"small\"\n          @click.prevent=\"removeForm(index, form)\"\n          >delete</el-button\n        >\n        <br />\n        <br />\n\n        <el-form-item label=\"Link\">\n          <el-input v-model=\"form.href\" placeholder=\"href\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"Operation\">\n          <el-select\n            v-model=\"form.op\"\n            multiple\n            placeholder=\"op\"\n            class=\"op-select\"\n          >\n            <el-option label=\"readproperty\" value=\"readproperty\"></el-option>\n            <el-option label=\"writeproperty\" value=\"writeproperty\"></el-option>\n            <el-option\n              label=\"observeproperty\"\n              value=\"observeproperty\"\n            ></el-option>\n            <el-option\n              label=\"unobserveproperty\"\n              value=\"unobserveproperty\"\n            ></el-option>\n            <el-option label=\"invokeaction\" value=\"invokeaction\"></el-option>\n            <el-option\n              label=\"subscribeevent\"\n              value=\"subscribeevent\"\n            ></el-option>\n            <el-option\n              label=\"unsubscribeevent\"\n              value=\"unsubscribeevent\"\n            ></el-option>\n            <el-option\n              label=\"readallproperties\"\n              value=\"readallproperties\"\n            ></el-option>\n            <el-option\n              label=\"writeallproperties\"\n              value=\"writeallproperties\"\n            ></el-option>\n            <el-option\n              label=\"readmultipleproperties\"\n              value=\"readmultipleproperties\"\n            ></el-option>\n            <el-option\n              label=\"writemultipleproperties\"\n              value=\"writemultipleproperties\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"contentType\">\n          <el-input\n            v-model=\"form.contentType\"\n            placeholder=\"contentType\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"Secure\">\n          <el-select v-model=\"form.secure\" placeholder=\"Secure\">\n            <el-option\n              v-for=\"sec in security\"\n              :key=\"sec.value\"\n              :label=\"sec.label\"\n              :value=\"sec.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n\n      <el-button size=\"mini\" @click=\"addPropertyForm(index)\"\n        >Add form to property</el-button\n      >\n\n      <br />\n    </el-form>\n\n    <br />\n\n    <el-button style=\"\" @click=\"addProperty\">Add property</el-button>\n    <br /><br /><br />\n    <span>Thing Actions</span>\n    <el-divider></el-divider>\n    <el-form\n      v-for=\"(action, index) in form.actions\"\n      :key=\"'action' + index + '.value'\"\n      :prop=\"'properties.' + index + '.value'\"\n      ref=\"form\"\n      :model=\"form\"\n      label-width=\"160px\"\n    >\n      <br /><span>action {{ index + 1 }} </span>\n      <el-button type=\"danger\" size=\"mini\" @click.prevent=\"removeAction(action)\"\n        >delete</el-button\n      >\n      <br />\n\n      <el-form-item label=\"Action name\">\n        <el-input v-model=\"action.name\" placeholder=\"name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Action title\">\n        <el-input v-model=\"action.title\" placeholder=\"title\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Action description\">\n        <el-input v-model=\"action.desc\" placeholder=\"description\"></el-input>\n      </el-form-item>\n\n      <el-form\n        v-for=\"(form, ind) in action.forms\"\n        :key=\"'properties.' + ind + '.value'\"\n        :prop=\"'properties.' + ind + '.value'\"\n        ref=\"form\"\n        :model=\"form\"\n        label-width=\"160px\"\n      >\n        <br /><span>action {{ index + 1 }} form {{ ind + 1 }} </span>\n        <el-button\n          type=\"danger\"\n          style=\"padding-left: 10px;\"\n          size=\"small\"\n          @click.prevent=\"removeActionForm(index, form)\"\n          >delete</el-button\n        >\n        <br />\n        <br />\n\n        <el-form-item label=\"Link\">\n          <el-input v-model=\"form.href\" placeholder=\"href\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"Operation\">\n          <el-select\n            v-model=\"form.op\"\n            multiple=\"\"\n            placeholder=\"op\"\n            class=\"op-select\"\n          >\n            <el-option label=\"readproperty\" value=\"readproperty\"></el-option>\n            <el-option label=\"writeproperty\" value=\"writeproperty\"></el-option>\n            <el-option\n              label=\"observeproperty\"\n              value=\"observeproperty\"\n            ></el-option>\n            <el-option\n              label=\"unobserveproperty\"\n              value=\"unobserveproperty\"\n            ></el-option>\n            <el-option label=\"invokeaction\" value=\"invokeaction\"></el-option>\n            <el-option\n              label=\"subscribeevent\"\n              value=\"subscribeevent\"\n            ></el-option>\n            <el-option\n              label=\"unsubscribeevent\"\n              value=\"unsubscribeevent\"\n            ></el-option>\n            <el-option\n              label=\"readallproperties\"\n              value=\"readallproperties\"\n            ></el-option>\n            <el-option\n              label=\"writeallproperties\"\n              value=\"writeallproperties\"\n            ></el-option>\n            <el-option\n              label=\"readmultipleproperties\"\n              value=\"readmultipleproperties\"\n            ></el-option>\n            <el-option\n              label=\"writemultipleproperties\"\n              value=\"writemultipleproperties\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"contentType\">\n          <el-input\n            v-model=\"form.contentType\"\n            placeholder=\"contentType\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"Secure\">\n          <el-select v-model=\"form.secure\" placeholder=\"Secure\">\n            <el-option\n              v-for=\"sec in form.security\"\n              :key=\"sec.value\"\n              :label=\"sec.label\"\n              :value=\"sec.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n\n      <el-button size=\"mini\" @click=\"addActionForm(index)\"\n        >Add form to action</el-button\n      >\n\n      <br />\n    </el-form>\n    <el-button @click=\"addActions\">Add action</el-button>\n    <br /><br /><br />\n\n    <span>Thing Events</span>\n    <el-divider></el-divider>\n    <el-form\n      v-for=\"(event, index) in form.events\"\n      :key=\"'event.' + index + '.value'\"\n      :prop=\"'event.' + index + '.value'\"\n      ref=\"form\"\n      :model=\"form\"\n      label-width=\"160px\"\n    >\n      <br /><span>event {{ index + 1 }} </span>\n      <el-button type=\"danger\" size=\"mini\" @click.prevent=\"removeEvent(event)\"\n        >delete</el-button\n      >\n      <br />\n      <br />\n      <el-form-item label=\"Event name\">\n        <el-input v-model=\"event.name\" placeholder=\"name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Event title\">\n        <el-input v-model=\"event.title\" placeholder=\"title\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Event description\">\n        <el-input v-model=\"event.desc\" placeholder=\"description\"></el-input>\n      </el-form-item>\n      <el-form\n        v-for=\"(form, ind) in event.forms\"\n        :key=\"'events.' + ind + '.value'\"\n        :prop=\"'events.' + ind + '.value'\"\n        ref=\"form\"\n        :model=\"form\"\n        label-width=\"160px\"\n      >\n        <br /><span>event {{ index + 1 }} form {{ ind + 1 }} </span>\n        <el-button\n          type=\"danger\"\n          style=\"padding-left: 10px;\"\n          size=\"small\"\n          @click.prevent=\"removeEventForm(index, form)\"\n          >delete</el-button\n        >\n        <br />\n        <br />\n\n        <el-form-item label=\"Link\">\n          <el-input v-model=\"form.href\" placeholder=\"href\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"Operation\">\n          <el-select\n            v-model=\"form.op\"\n            multiple\n            placeholder=\"op\"\n            class=\"op-select\"\n          >\n            <el-option label=\"readproperty\" value=\"readproperty\"></el-option>\n            <el-option label=\"writeproperty\" value=\"writeproperty\"></el-option>\n            <el-option\n              label=\"observeproperty\"\n              value=\"observeproperty\"\n            ></el-option>\n            <el-option\n              label=\"unobserveproperty\"\n              value=\"unobserveproperty\"\n            ></el-option>\n            <el-option label=\"invokeaction\" value=\"invokeaction\"></el-option>\n            <el-option\n              label=\"subscribeevent\"\n              value=\"subscribeevent\"\n            ></el-option>\n            <el-option\n              label=\"unsubscribeevent\"\n              value=\"unsubscribeevent\"\n            ></el-option>\n            <el-option\n              label=\"readallproperties\"\n              value=\"readallproperties\"\n            ></el-option>\n            <el-option\n              label=\"writeallproperties\"\n              value=\"writeallproperties\"\n            ></el-option>\n            <el-option\n              label=\"readmultipleproperties\"\n              value=\"readmultipleproperties\"\n            ></el-option>\n            <el-option\n              label=\"writemultipleproperties\"\n              value=\"writemultipleproperties\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"contentType\">\n          <el-input\n            v-model=\"form.contentType\"\n            placeholder=\"contentType\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"Secure\">\n          <el-select v-model=\"form.secure\" placeholder=\"Secure\">\n            <el-option\n              v-for=\"sec in security\"\n              :key=\"sec.value\"\n              :label=\"sec.label\"\n              :value=\"sec.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n      </el-form>\n\n      <el-button size=\"mini\" @click=\"addEventForm(index)\"\n        >Add form to event</el-button\n      >\n      <br />\n      <br />\n    </el-form>\n\n    <el-button @click=\"addEvents\">Add event</el-button>\n    <br /><br /><br />\n\n    <span>Forms</span>\n    <el-divider></el-divider>\n\n    <el-form\n      v-for=\"(form, ind) in form.forms\"\n      :key=\"'properties.' + ind + '.value'\"\n      :prop=\"'properties.' + ind + '.value'\"\n      ref=\"form\"\n      :model=\"form\"\n      label-width=\"160px\"\n    >\n      <br /><span>thing form {{ ind + 1 }} </span>\n      <el-button\n        type=\"danger\"\n        style=\"padding-left: 10px;\"\n        size=\"small\"\n        @click.prevent=\"removeForm(ind, form)\"\n        >delete</el-button\n      >\n      <br />\n      <br />\n\n      <el-form-item label=\"Link\">\n        <el-input v-model=\"form.href\" placeholder=\"href\"></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"Operation\">\n        <el-select\n          v-model=\"form.op\"\n          multiple\n          placeholder=\"op\"\n          class=\"op-select\"\n        >\n          <el-option label=\"readproperty\" value=\"readproperty\"></el-option>\n          <el-option label=\"writeproperty\" value=\"writeproperty\"></el-option>\n          <el-option\n            label=\"observeproperty\"\n            value=\"observeproperty\"\n          ></el-option>\n          <el-option\n            label=\"unobserveproperty\"\n            value=\"unobserveproperty\"\n          ></el-option>\n          <el-option label=\"invokeaction\" value=\"invokeaction\"></el-option>\n          <el-option label=\"subscribeevent\" value=\"subscribeevent\"></el-option>\n          <el-option\n            label=\"unsubscribeevent\"\n            value=\"unsubscribeevent\"\n          ></el-option>\n          <el-option\n            label=\"readallproperties\"\n            value=\"readallproperties\"\n          ></el-option>\n          <el-option\n            label=\"writeallproperties\"\n            value=\"writeallproperties\"\n          ></el-option>\n          <el-option\n            label=\"readmultipleproperties\"\n            value=\"readmultipleproperties\"\n          ></el-option>\n          <el-option\n            label=\"writemultipleproperties\"\n            value=\"writemultipleproperties\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n\n      <el-form-item label=\"contentType\">\n        <el-input\n          v-model=\"form.contentType\"\n          placeholder=\"contentType\"\n        ></el-input>\n      </el-form-item>\n\n      <el-form-item label=\"Secure\">\n        <el-select v-model=\"form.secure\" placeholder=\"Secure\">\n          <el-option\n            v-for=\"sec in security\"\n            :key=\"sec.value\"\n            :label=\"sec.label\"\n            :value=\"sec.value\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n    </el-form>\n\n    <el-button @click=\"addForm\">Add form to thing</el-button>\n    <br /><br /><br />\n    <span>Security</span>\n    <el-divider></el-divider>\n\n    <el-form-item label=\"Security\">\n      <el-select\n        style=\"width: 100%;\"\n        v-model=\"form.security\"\n        multiple\n        placeholder=\"security\"\n      >\n        <el-option\n          v-for=\"sec in security\"\n          :key=\"sec.value\"\n          :label=\"sec.label\"\n          :value=\"sec.value\"\n        ></el-option>\n      </el-select>\n    </el-form-item>\n\n    <el-button @click=\"addSecurityDefinitions\"\n      >Add Security Definitions</el-button\n    >\n    <br /><br />\n\n    <el-form\n      v-for=\"(secDef, index) in form.securityDefinitions\"\n      :key=\"index\"\n      label-width=\"160px\"\n    >\n      <br />\n      <span>Security Definitions {{ secDef.scheme }}</span\n      ><br /><br />\n\n      <el-form-item label=\"Security Definitions\">\n        <el-select\n          style=\"width: 100%;\"\n          v-model=\"secDef.scheme\"\n          placeholder=\"security\"\n        >\n          <el-option\n            v-for=\"sec in security\"\n            :key=\"sec.value\"\n            :label=\"sec.label\"\n            :value=\"sec.value\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Description\">\n        <el-input\n          v-model=\"secDef.description\"\n          placeholder=\"description\"\n        ></el-input>\n      </el-form-item>\n      <div v-if=\"secDef.scheme == 'basic_sc'\">\n        <!-- in -->\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"Specifies the location of security authentication information | string\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"in\">\n            <el-select\n              style=\"width: 100%;\"\n              v-model=\"secDef.securityDefinitions\"\n              placeholder=\"location\"\n            >\n              <el-option\n                v-for=\"lc in locsec\"\n                :key=\"lc.value\"\n                :label=\"lc.label\"\n                :value=\"lc.value\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n        </el-tooltip>\n\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"Name for query, header, or cookie parameters | string\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"name\">\n            <el-input v-model=\"secDef.name\" placeholder=\"name\"></el-input>\n          </el-form-item>\n        </el-tooltip>\n      </div>\n\n      <div v-if=\"secDef.scheme == 'apikey_sc'\">\n        <!-- in -->\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"Specifies the location of security authentication information | string\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"in\">\n            <el-select\n              style=\"width: 100%;\"\n              v-model=\"secDef.securityDefinitions\"\n              placeholder=\"location\"\n            >\n              <el-option\n                v-for=\"lc in locsec\"\n                :key=\"lc.value\"\n                :label=\"lc.label\"\n                :value=\"lc.value\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n        </el-tooltip>\n\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"Name for query, header, or cookie parameters | string\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"name\">\n            <el-input v-model=\"secDef.name\" placeholder=\"name\"></el-input>\n          </el-form-item>\n        </el-tooltip>\n      </div>\n\n      <div v-if=\"secDef.scheme == 'oauth2_sc'\">\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"URI of the authorization server | anyURI\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"authorization\">\n            <el-input\n              v-model=\"secDef.authorization\"\n              placeholder=\"authorization\"\n            ></el-input>\n          </el-form-item>\n        </el-tooltip>\n\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"token | anyURI\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"token\">\n            <el-input v-model=\"secDef.token\" placeholder=\"token\"></el-input>\n          </el-form-item>\n        </el-tooltip>\n\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"URI of the refresh server | anyURI\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"refresh\">\n            <el-input v-model=\"secDef.refresh\" placeholder=\"refresh\"></el-input>\n          </el-form-item>\n        </el-tooltip>\n\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"Set of authorization scope identifiers provided as an array | string or Array of string\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"scopes\">\n            <el-input v-model=\"secDef.scopes\" placeholder=\"scopes\"></el-input>\n          </el-form-item>\n        </el-tooltip>\n\n        <el-tooltip\n          :open-delay=\"1000\"\n          :hide-after=\"10000\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"Authorization flow | anyURI\"\n          placement=\"top-start\"\n        >\n          <el-form-item label=\"flow\">\n            <el-input v-model=\"secDef.flow\" placeholder=\"flow\"></el-input>\n          </el-form-item>\n        </el-tooltip>\n      </div>\n    </el-form>\n\n    <v-jsoneditor\n      v-model=\"mapperTDfromForm\"\n      :plus=\"false\"\n      height=\"400px\"\n    ></v-jsoneditor>\n    <br />\n    <!-- <v-jsoneditor\n      v-model=\"mapperTDtoForm\"\n      :plus=\"false\"\n      height=\"400px\"\n    ></v-jsoneditor>\n    <br />\n    <v-jsoneditor\n      v-model=\"form\"\n      :plus=\"false\"\n      height=\"400px\"\n    ></v-jsoneditor>\n    <br /> -->\n\n    <el-button type=\"primary\" @click=\"onSubmit\">Create TD</el-button>\n    <el-button type=\"danger\">Cancel</el-button>\n  </el-form>\n</template>\n\n<script>\nimport VJsoneditor from \"v-jsoneditor\";\n\nexport default {\n  name: \"TDConfiguration\",\n  components: {\n    VJsoneditor,\n  },\n  data() {\n    return {\n      selEditValue: '',\n      form: {\n        \"@context\": \"\",\n        \"@type\": '',\n        thingName: \"\",\n        title: \"\",\n        titles: [{}],\n        properties: [],\n        actions: [],\n        events: [],\n        description: \"\",\n        descriptions: [{}],\n        base: \"\",\n        links: \"\",\n        security: [],\n        forms: [],\n        securityDefinitions: [{}],\n      },\n      locsec: [\n        { value: \"header\", label: \"header\" },\n        { value: \"query\", label: \"query\" },\n        { value: \"body\", label: \"body\" },\n        { value: \"cookie\", label: \"cookie\" },\n      ],\n      lng: [\n        { value: \"ar-SA\", label: \"Arabic Saudi Arabia\" },\n        { value: \"cs-CZ\", label: \"Czech Czech Republic\" },\n        { value: \"da-DK\", label: \"Danish Denmark\" },\n        { value: \"de-DE\", label: \"German Germany\" },\n        { value: \"el-GR\", label: \"Modern Greek Greece\" },\n        { value: \"en-AU\", label: \"English Australia\" },\n        { value: \"en-GB\", label: \"English United Kingdom\" },\n        { value: \"en-IE\", label: \"English Ireland\" },\n        { value: \"en-US\", label: \"English United States\" },\n        { value: \"en-ZA\", label: \"English South Africa\" },\n        { value: \"es-ES\", label: \"Spanish Spain\" },\n        { value: \"es-MX\", label: \"Spanish Mexico\" },\n        { value: \"fi-FI\", label: \"Finnish Finland\" },\n        { value: \"fr-CA\", label: \"French Canada\" },\n        { value: \"fr-FR\", label: \"French France\" },\n        { value: \"he-IL\", label: \"Hebrew Israel\" },\n        { value: \"hi-IN\", label: \"Hindi India\" },\n        { value: \"hu-HU\", label: \"Hungarian Hungary\" },\n        { value: \"id-ID\", label: \"Indonesian Indonesia\" },\n        { value: \"it-IT\", label: \"Italian Italy\" },\n        { value: \"ja-JP\", label: \"Japanese Japan\" },\n        { value: \"ko-KR\", label: \"Korean Republic of Korea\" },\n        { value: \"nl-BE\", label: \"Dutch Belgium\" },\n        { value: \"nl-NL\", label: \"Dutch Netherlands\" },\n        { value: \"no-NO\", label: \"Norwegian Norway\" },\n        { value: \"pl-PL\", label: \"Polish Poland\" },\n        { value: \"pt-BR\", label: \"Portuguese Brazil\" },\n        { value: \"pt-PT\", label: \"Portuguese Portugal\" },\n        { value: \"ro-RO\", label: \"Romanian Romania\" },\n        { value: \"ru-RU\", label: \"Russian Russian Federation\" },\n        { value: \"sk-SK\", label: \"Slovak Slovakia\" },\n        { value: \"sv-SE\", label: \"Swedish Sweden\" },\n        { value: \"th-TH\", label: \"Thai Thailand\" },\n        { value: \"tr-TR\", label: \"Turkish Turkey\" },\n        { value: \"zh-CN\", label: \"Chinese China\" },\n        { value: \"zh-HK\", label: \"Chinese Hong Kong\" },\n        { value: \"zh-TW\", label: \"Chinese Taiwan\" },\n      ],\n      security: [\n        { value: \"nosec_sc\", label: \"No authentication\" },\n        { value: \"basic_sc\", label: \"Basic\" },\n        { value: \"digest_sc\", label: \"Digest Access\" },\n        { value: \"apikey_sc\", label: \"API key\" },\n        { value: \"bearer_sc\", label: \"Bearer Token\" },\n        { value: \"psk_sc\", label: \"Pre-shared key\" },\n        { value: \"oauth2_sc\", label: \"OAuth2\" },\n      ],\n    };\n  },\n  created() {\n      this.form = this.mapperTDtoForm\n  },\n  computed: {\n    things() {\n      return this.$store.getters.getThings();\n    },\n    \n    listEditableThings() {\n        const things = [];\n        const tds = this.$store.getters.getThings()\n\n        for (const key of Object.keys(tds)) {\n            things.push({value: key, label: key}) \n        }\n\n        return things\n    },\n    \n    mapperTDfromForm() {\n      const form = this.form;\n\n      const tdObj = {};\n      tdObj.version = {};\n      tdObj.version.instance = form.version;\n\n      tdObj.name = form.name;\n      tdObj[\"@context\"] = [];\n      tdObj[\"@context\"].push(form[\"@context\"]);\n      tdObj[\"@type\"] = form[\"@type\"];\n      tdObj.thingName = form.thingName;\n      tdObj.title = form.title;\n      tdObj.titles = form.titles;\n      tdObj.forms = form.forms;\n      tdObj.description = form.description;\n      tdObj.descriptions = form.descriptions;\n      tdObj.base = form.base;\n      tdObj.links = form.links;\n      tdObj.forms = form.forms;\n      tdObj.security = form.security;\n\n      tdObj.securityDefinitions = {};\n      for (const key in form.securityDefinitions) {\n        tdObj.securityDefinitions[form.securityDefinitions[key].scheme] = form.securityDefinitions[\n          key\n        ];\n      }\n\n      tdObj.properties = {};\n      for (const key in form.properties) {\n        tdObj.properties[form.properties[key].name] = form.properties[\n          key\n        ];\n      }\n\n      if (form.actions.length > 0) {\n        tdObj.actions = {};\n        for (const key in form.actions) {\n          tdObj.actions[form.actions[key].name] = form.actions[key];\n        }\n      }\n\n      if (form.events.length > 0) {\n        tdObj.events = {};\n        for (const key in form.events) {\n          tdObj.events[form.events[key].name] = form.events[key];\n        }\n      }\n\n      return tdObj;\n    },\n    mapperTDtoForm() {\n      const tdObj = {};\n      //const form = this.mapperTDfromForm;\n      const form = this.$store.getters.getThings()[this.selEditValue]\n      console.log('mapperTDtoForm')\n      console.log(form)\n      tdObj.version = form.version.instance;\n\n      tdObj.name =form.name\n\n    //   tdObj[\"@type\"] = form[\"@type\"][0]\n      tdObj[\"@context\"] = form[\"@context\"]\n\n      tdObj.thingName = form.name;\n      tdObj.title = form.title;\n      tdObj.titles = [{}];\n      tdObj.forms = form.forms;\n      tdObj.description = form.description;\n      tdObj.descriptions = [{}];\n      tdObj.base = form.base;\n      tdObj.links = form.links;\n      tdObj.forms = form.forms;\n      tdObj.security = form.security;\n\n      tdObj.securityDefinitions = [];\n      for (const key of Object.keys(form.securityDefinitions)) {\n          tdObj.securityDefinitions.push(form.securityDefinitions[key])\n      }\n\n      tdObj.properties = [];\n\n     \nfor (const key of Object.keys(form.properties)) {\n          const properties = form.properties[key];\n          properties.name = key\n          tdObj.properties.push(properties)\n      }\n      \n      \n\n      tdObj.actions = [];\n      if (form.hasOwnProperty('actions')) {\n        for (const key of Object.keys(form.actions)) {\n            const actions = form.actions[key];\n          actions.name = key\n          tdObj.actions.push(actions)\n        }\n      }\n      \n\n      tdObj.events = [];\n      if (form.hasOwnProperty('events')) {\n        for (const key of Object.keys(form.events)) {\n            const events = form.events[key];\n          events.name = key\n            tdObj.events.push(events)\n        }\n      }\n\n      return tdObj;\n    }\n  },\n  methods: {\n    onSubmit() {\n      const pr = this.mapperTDfromForm.thingName;\n      const obj2 = this.mapperTDfromForm;\n      const o = {};\n      o[pr] = obj2;\n      \n    fetch('http://localhost:4000/thing/td', {\n  method: 'POST', // or 'PUT'\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({data: o}),\n})\n.then(response => response.json())\n.then(data => {\n    this.$store.dispatch('fetchThings');\n    this.$router.push({ path: `/` })\n  console.log('Success:', data);\n})\n.catch((error) => {\n  console.error('Error:', error);\n});\n        \n    },\n    removeProperty(item) {\n      var index = this.form.properties.indexOf(item);\n      if (index !== -1) {\n        this.form.properties.splice(index, 1);\n      }\n    },\n    addProperty() {\n      this.form.properties.push({ readOnly: true, forms: [] });\n    },\n    addPropertyForm(index) {\n      this.form.properties[index].forms.push({});\n    },\n    removePropertyForm(index, item) {\n      var ind = this.form.properties[index].forms.indexOf(item);\n      if (ind !== -1) {\n        this.form.properties[index].forms.splice(ind, 1);\n      }\n    },\n    addActionForm(index) {\n      this.form.actions[index].forms.push({});\n    },\n    removeActionForm(index, item) {\n      var ind = this.form.actions[index].forms.indexOf(item);\n      if (ind !== -1) {\n        this.form.actions[index].forms.splice(ind, 1);\n      }\n    },\n    addEventForm(index) {\n      this.form.events[index].forms.push({});\n    },\n    removeEventForm(index, item) {\n      var ind = this.form.events[index].forms.indexOf(item);\n      if (ind !== -1) {\n        this.form.events[index].forms.splice(ind, 1);\n      }\n    },\n    addActions() {\n      this.form.actions.push({ forms: [] });\n    },\n    addForm(index) {\n      this.form.forms.push({});\n    },\n    removeForm(index, item) {\n      var ind = this.form.forms.indexOf(item);\n      if (ind !== -1) {\n        this.form.forms.splice(ind, 1);\n      }\n    },\n    removeAction(item) {\n      var index = this.form.actions.indexOf(item);\n      if (index !== -1) {\n        this.form.actions.splice(index, 1);\n      }\n    },\n    addEvents() {\n      this.form.events.push({ forms: [] });\n    },\n    removeEvent(item) {\n      var index = this.form.events.indexOf(item);\n      if (index !== -1) {\n        this.form.events.splice(index, 1);\n      }\n    },\n    addDescriptions() {\n      this.form.descriptions.push({});\n    },\n    removeDescriptions(item) {\n      var index = this.form.descriptions.indexOf(item);\n      if (index !== -1) {\n        this.form.descriptions.splice(index, 1);\n      }\n    },\n    addTitles() {\n      this.form.titles.push({});\n    },\n    removeTitles(item) {\n      var index = this.form.titles.indexOf(item);\n      if (index !== -1) {\n        this.form.titles.splice(index, 1);\n      }\n    },\n    addSecurityDefinitions() {\n      this.form.securityDefinitions.push({});\n    },\n    removeSecurityDefinitions(item) {\n      var index = this.form.securityDefinitions.indexOf(item);\n      if (index !== -1) {\n        this.form.securityDefinitions.splice(index, 1);\n      }\n    },\n    selectEDit(){\n        this.form = this.mapperTDtoForm\n    },\n    selectDef(){\n        this.form = {\n        \"@context\": \"\",\n        \"@type\": '',\n        thingName: \"\",\n        title: \"\",\n        titles: [{}],\n        properties: [],\n        actions: [],\n        events: [],\n        forms: [],\n        description: \"\",\n        descriptions: [{}],\n        base: \"\",\n        links: \"\",\n        security: [],\n        forms: [],\n        securityDefinitions: [{}],\n      }\n    }\n  },\n};\n</script>\n\n<style scoped>\n.demo-input-label {\n  display: inline-block;\n  width: 130px;\n}\n.del {\n  padding-left: 10px;\n}\n.op-select {\n  width: 500px;\n}\n</style>\n"]}]}