{"remainingRequest":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/src/components/ThingModel.vue?vue&type=template&id=5e2d9f8b&","dependencies":[{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/src/components/ThingModel.vue","mtime":1632788685810},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1570969765705},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js","mtime":1570969765705}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return !_vm.loading\n    ? _c(\"div\", [\n        _c(\n          \"div\",\n          {\n            staticStyle: {\n              display: \"flex\",\n              width: \"100%\",\n              \"justify-content\": \"flex-end\"\n            }\n          },\n          [\n            _c(\n              \"span\",\n              { staticStyle: { \"font-size\": \"20px\", \"margin-right\": \"auto\" } },\n              [\n                _vm._v(\n                  \"\\n      \" +\n                    _vm._s(_vm.model ? _vm.model.name : null) +\n                    \"\\n    \"\n                )\n              ]\n            ),\n            _c(\n              \"el-button-group\",\n              [\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.toogleRepresentation(1)\n                      }\n                    }\n                  },\n                  [_vm._v(\"JSON\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.toogleRepresentation(2)\n                      }\n                    }\n                  },\n                  [_vm._v(\"Visual\")]\n                ),\n                _c(\n                  \"el-button\",\n                  {\n                    attrs: { size: \"small\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.toogleRepresentation(3)\n                      }\n                    }\n                  },\n                  [_vm._v(\"Dashboard\")]\n                )\n              ],\n              1\n            )\n          ],\n          1\n        ),\n        _vm.$route.params.thing == \"ipCamera\"\n          ? _c(\n              \"div\",\n              [\n                _c(\n                  \"router-link\",\n                  {\n                    staticClass: \"el-link el-link--primary is-underline\",\n                    staticStyle: { \"font-size\": \"16px\" },\n                    attrs: { to: \"/ipCamera/dashboard\" }\n                  },\n                  [_vm._v(\"dashboard (in dev)\")]\n                )\n              ],\n              1\n            )\n          : _vm._e(),\n        _vm.representation == 1\n          ? _c(\n              \"div\",\n              [\n                _c(\"br\"),\n                _c(\"vue-json-pretty\", {\n                  attrs: { path: \"res\", data: _vm.model },\n                  on: { click: _vm.handleClick }\n                })\n              ],\n              1\n            )\n          : _vm._e(),\n        _vm.representation == 2\n          ? _c(\n              \"div\",\n              [\n                _c(\n                  \"p\",\n                  [\n                    _vm._v(\"Type of:\\n      [ \"),\n                    _c(\n                      \"el-link\",\n                      {\n                        attrs: {\n                          href: _vm.thingDescriptionURl(),\n                          type: \"primary\"\n                        }\n                      },\n                      [_vm._v(_vm._s(_vm.model.name))]\n                    ),\n                    _vm._v(\" ]\\n    \")\n                  ],\n                  1\n                ),\n                _c(\"p\", [\n                  _vm._v(\n                    \"Version of TD instance \" +\n                      _vm._s(_vm.model.version.instance)\n                  )\n                ]),\n                _c(\"h3\", [_vm._v(\"Description\")]),\n                _c(\"p\", [_vm._v(_vm._s(_vm.model.description))]),\n                _c(\"h3\", [_vm._v(\"Security\")]),\n                _c(\n                  \"el-table\",\n                  {\n                    staticStyle: { width: \"100%\" },\n                    attrs: { data: _vm.getSecurityArray(), border: \"\" }\n                  },\n                  [\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"type\", label: \"Type\" }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"scheme\", label: \"Security mechanism\" }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        prop: \"description\",\n                        width: \"420\",\n                        label: \"Description\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\"h3\", [_vm._v(\"Properties\")]),\n                _c(\n                  \"el-table\",\n                  {\n                    staticStyle: { width: \"100%\" },\n                    attrs: { data: _vm.getPropertiesArray(), border: \"\" }\n                  },\n                  [\n                    _c(\"el-table-column\", {\n                      attrs: { width: \"180\", label: \"Property\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(scope) {\n                              return [\n                                _c(\n                                  \"router-link\",\n                                  {\n                                    staticClass:\n                                      \"el-link el-link--primary is-underline\",\n                                    staticStyle: { \"font-size\": \"16px\" },\n                                    attrs: {\n                                      to:\n                                        _vm.thingName +\n                                        \"/properties/\" +\n                                        scope.row.property\n                                    }\n                                  },\n                                  [_vm._v(_vm._s(scope.row.property))]\n                                )\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        false,\n                        1554782349\n                      )\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"type\", label: \"Type\" }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: {\n                        prop: \"description\",\n                        width: \"720\",\n                        label: \"Description\"\n                      }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"readOnly\", label: \"ReadOnly\" }\n                    })\n                  ],\n                  1\n                ),\n                _vm.model.events\n                  ? _c(\n                      \"div\",\n                      [\n                        _c(\"h3\", [_vm._v(\"Events\")]),\n                        _c(\n                          \"el-table\",\n                          {\n                            staticStyle: { width: \"100%\" },\n                            attrs: { data: _vm.getEventsArray(), border: \"\" }\n                          },\n                          [\n                            _c(\"el-table-column\", {\n                              attrs: { prop: \"event\", label: \"Event\" }\n                            }),\n                            _c(\"el-table-column\", {\n                              attrs: {\n                                prop: \"type\",\n                                width: \"720\",\n                                label: \"Type\"\n                              }\n                            }),\n                            _c(\"el-table-column\", {\n                              attrs: {\n                                prop: \"protocol\",\n                                width: \"720\",\n                                label: \"Protocol\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n                _c(\"h3\", [_vm._v(\"Forms\")]),\n                _c(\n                  \"el-table\",\n                  {\n                    staticStyle: { width: \"100%\" },\n                    attrs: { data: _vm.model.forms, border: \"\" }\n                  },\n                  [\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"href\", label: \"URL\", width: \"520\" }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"contentType\", label: \"Content Type\" }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"op\", label: \"Operation\" }\n                    }),\n                    _c(\"el-table-column\", {\n                      attrs: { prop: \"secure\", label: \"Access\" }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          : _vm._e(),\n        _vm.representation == 3\n          ? _c(\"div\", [_vm._v(\"\\n  dashboard\\n\")])\n          : _vm._e()\n      ])\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}