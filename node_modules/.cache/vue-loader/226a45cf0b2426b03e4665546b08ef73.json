{"remainingRequest":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/src/components/HomeForElderlyMap.vue?vue&type=style&index=0&id=075b4cc8&scoped=true&lang=css&","dependencies":[{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/src/components/HomeForElderlyMap.vue","mtime":1605229908474},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/css-loader/index.js","mtime":1570966921450},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1570969765705},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/postcss-loader/src/index.js","mtime":1570966921687},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js","mtime":1570969765705}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#full_div {\n    display: flex;\n    width: 100%;\n    height: 500px;\n}\n",{"version":3,"sources":["HomeForElderlyMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA;AACA;AACA","file":"HomeForElderlyMap.vue","sourceRoot":"src/components","sourcesContent":["<template>\n        <div id=\"full_div\">\n            <l-map\n                :fitBounds:=\"bounds\"\n                :crs:=\"crs\"\n                :zoom=\"1\"\n                :center=\"center\"\n                style=\"width: 100%; height: 100%; \"\n                @update:zoom=\"zoomUpdated\"\n                \n            >\n                <l-image-overlay\n                        :url=\"url\"\n                        :bounds=\"bounds\">\n                </l-image-overlay>\n                <l-marker\n                        v-for=\"c in cameras\"\n                        :lat-lng=\"c\"\n                        :key=\"c.name\">\n                    <l-icon\n                            :iconSize=\"iconSize\"\n                            :iconAnchor=\"staticAnchor\"\n                            :iconUrl=\"c.angle == 360? camera360: camera\" >\n<!--                        <div>d</div>-->\n                    </l-icon>\n                </l-marker>\n\n                <l-circle-marker\n                        v-for=\"c in mapUserToMap\"\n                        :lat-lng=\"c\"\n                        :key=\"c.name\"\n                        :radius=\"circle.radius\"\n                        :color=\"c.markColor\"\n                >\n                    <l-popup><span style=\"font-size: 14px\">User Info</span><br><b>name</b>: {{c.name}} </l-popup>\n                </l-circle-marker>\n\n            </l-map>\n    </div>\n\n</template>\n\n<script>\n    import { CRS } from \"leaflet\";\n    import { LMap, LImageOverlay, LMarker, LCircleMarker, LPopup, LIcon } from \"vue2-leaflet\";\n    import image from \"../assets/image.png\"\n    import camera360 from \"../assets/cam360.png\";\n    import camera from \"../assets/Security-Camera-icon.png\";\n\n    import { elderlyMap, userIcon } from \"./mockForIPCamera\";\n\n    export default {\n        name: \"HomeForElderlyMap\",\n        components: {\n            LMarker,\n            LMap,\n            LImageOverlay,\n            LCircleMarker,\n            LPopup,\n            LIcon\n        },\n        props: {\n            locations: Array //[{name: '', room: '', location: ''}]\n        },\n        data() {\n            return {\n                url: image,\n                crs: CRS.Simple,\n                bounds: [[-400, -300], [200, 400]],\n                zoom: 1,\n                center: [-3.006127, 50.045471],\n                currentZoom: 5,\n                staticAnchor: [16, 16],\n                iconSize: [32, 32],\n                camera: camera,\n                camera360: camera360,\n                circle: {\n                    center: [47.413220, -1.0482],\n                    radius: 6,\n                    color: 'red'\n                }, \n                cameras: [\n                    { name: 'camera1', angle: '180', lng: 128.147278, lat: -72.571782 },\n                    { name: 'camera2', angle: '360', lng: 205.464249, lat: -50.743408 },\n                    { name: 'camera3', angle: '180', lng: 203.941956, lat: -72.425586 },\n                    { name: 'camera4', angle: '360', lng: 205.331726, lat: -79.216906},\n                    { name: 'camera5', angle: '360', lng: 267.794495, lat: -51.392779 },\n                    { name: 'camera6', angle: '360', lng: 269.358673, lat: -79.327847 },\n                    { name: 'camera7', angle: '360', lng: 329.727173, lat: -51.88624 },\n                    { name: 'camera8', angle: '360', lng: 343.866577, lat: -78.971386 },\n                    { name: 'camera9', angle: '180', lng: 373.342896, lat: -73.263122 }\n                    // { name: 'foboo01', lng: 182.190399, lat: -54.440499 },\n                    // { name: 'foboo02', lng: 310.624008, lat: -81.045246 }\n                ],\n                users: [{\n                    name: \"user1\",\n                    room: \"room3\"\n                }, {\n                    name: \"user2\",\n                    room: \"room3\"\n                },{\n                    name: \"user3\",\n                    room: \"room3\"\n                },{\n                    name: \"user4\",\n                    room: \"room3\"\n                },{\n                    name: \"user5\",\n                    room: \"room3\"\n                }]\n            };\n        },\n        created() {\n            setInterval(this.updateMap, 5000);\n        },\n        methods: {\n            zoomUpdated (zoom) {\n                this.currentZoom = zoom;\n            },\n            centerUpdated (center) {\n                this.center = center;\n            },\n            onMapClick(e) {\n                alert(\"You clicked the map at \" + e.latlng);\n            },\n            getAvailableLocation(room, el) {\n                let roomIndex = el[room].findIndex(item => item.isAvailable === true);\n                el[room][roomIndex].isAvailable = false;\n                return el[room][roomIndex].locations;\n            },\n            updateMap() {\n                const arr = [\"room1\",\"room2\",\"room3\",\"room4\",\"room5\",\"hall1\",\"sunroom\"];\n                const tmp = [];\n                for (let i =0; i< this.users.length; i++) {\n                    tmp.push({name: this.users[i].name, room: arr[Math.floor(Math.random() * 7)]});\n                }\n                this.users = tmp;\n            },\n            jsonCopy(src) {\n                return JSON.parse(JSON.stringify(src));\n            }\n            // boundsUpdated (bounds) {\n            //     this.bounds = bounds;\n            // }\n        },\n        computed: {\n            mapUserToMap() {\n                const el = this.jsonCopy(elderlyMap);\n\n                return this.users.map(item => {\n                    const loc = this.getAvailableLocation(item.room, el);\n                    return {\n                        name: item.name,\n                        lat: loc[\"lat\"],\n                        lng: loc[\"lng\"],\n                        markColor: userIcon[item.name]\n                    }\n                });\n            }\n        }\n    };\n</script>\n<style scoped>\n    #full_div {\n        display: flex;\n        width: 100%;\n        height: 500px;\n    }\n</style>\n"]}]}