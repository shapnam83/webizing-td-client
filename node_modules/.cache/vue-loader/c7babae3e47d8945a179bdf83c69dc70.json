{"remainingRequest":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/src/components/TDConfiguration.vue?vue&type=template&id=5b7fef86&scoped=true&","dependencies":[{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/src/components/TDConfiguration.vue","mtime":1632919911729},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1570969765705},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js","mtime":1570969765705}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"el-form\",\n    { ref: \"form\", attrs: { model: _vm.form, \"label-width\": \"160px\" } },\n    [\n      _c(\"span\", [_vm._v(\"Edit Things\")]),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"Thing name\" } },\n        [\n          _c(\n            \"el-select\",\n            {\n              staticStyle: { width: \"100%\" },\n              attrs: { placeholder: \"select thing\" },\n              model: {\n                value: _vm.selEditValue,\n                callback: function($$v) {\n                  _vm.selEditValue = $$v\n                },\n                expression: \"selEditValue\"\n              }\n            },\n            _vm._l(_vm.listEditableThings, function(sec) {\n              return _c(\"el-option\", {\n                key: sec.value,\n                attrs: { label: sec.label, value: sec.value }\n              })\n            }),\n            1\n          ),\n          _c(\n            \"el-button\",\n            {\n              staticStyle: { \"margin-top\": \"2px\" },\n              on: {\n                click: function($event) {\n                  return _vm.selectEDit()\n                }\n              }\n            },\n            [_vm._v(\"Edit\")]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"danger\" },\n              on: {\n                click: function($event) {\n                  return _vm.selectDef()\n                }\n              }\n            },\n            [_vm._v(\"Cancel\")]\n          )\n        ],\n        1\n      ),\n      _c(\"span\", [_vm._v(\"Thing Core\")]),\n      _c(\"el-divider\"),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            effect: \"dark\",\n            content:\n              \"ex. Apple Watch, Air Quiality etc.. (don't use spaces in name field)\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Unique URL name\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"thingName\" },\n                model: {\n                  value: _vm.form.thingName,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"thingName\", $$v)\n                  },\n                  expression: \"form.thingName\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            effect: \"dark\",\n            content: \"ex. Apple Watch, Air Quiality etc..\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"name\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"name\" },\n                model: {\n                  value: _vm.form.name,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"name\", $$v)\n                  },\n                  expression: \"form.name\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            effect: \"dark\",\n            content:\n              \"JSON-LD keyword to define short-hand names called terms that are used throughout a TD document | anyURI or Array\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { required: \"\", label: \"JSON-LD keyword\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"@context\" },\n                model: {\n                  value: _vm.form[\"@context\"],\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"@context\", $$v)\n                  },\n                  expression: \"form['@context']\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            effect: \"dark\",\n            content:\n              \"JSON-LD keyword to label the object with semantic tags (or types) | string or Array of string\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { required: \"\", label: \"Type\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"@type\" },\n                model: {\n                  value: _vm.form[\"@type\"],\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"@type\", $$v)\n                  },\n                  expression: \"form['@type']\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            \"hide-after\": 10000,\n            effect: \"dark\",\n            content:\n              \"Provides a human-readable title (e.g., display a text for UI representation) based on a default language | string\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { required: \"\", label: \"Title\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"title\" },\n                model: {\n                  value: _vm.form.title,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"title\", $$v)\n                  },\n                  expression: \"form.title\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            \"hide-after\": 10000,\n            effect: \"dark\",\n            content:\n              \"\\tProvides multi-language human-readable titles (e.g., display a text for UI representation in different languages) | MultiLanguage\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Titles\" } },\n            _vm._l(_vm.form.titles, function(title, index) {\n              return _c(\n                \"div\",\n                { key: index },\n                [\n                  _c(\n                    \"el-input\",\n                    {\n                      staticClass: \"input-with-select\",\n                      staticStyle: { \"padding-bottom\": \"2px\" },\n                      attrs: { placeholder: \"Please input\" },\n                      model: {\n                        value: title.desciption,\n                        callback: function($$v) {\n                          _vm.$set(title, \"desciption\", $$v)\n                        },\n                        expression: \"title.desciption\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"260px\" },\n                          attrs: { slot: \"prepend\", placeholder: \"Select\" },\n                          slot: \"prepend\",\n                          model: {\n                            value: title.language,\n                            callback: function($$v) {\n                              _vm.$set(title, \"language\", $$v)\n                            },\n                            expression: \"title.language\"\n                          }\n                        },\n                        _vm._l(_vm.lng, function(l) {\n                          return _c(\"el-option\", {\n                            key: l.language,\n                            attrs: { label: l.label, value: l.value }\n                          })\n                        }),\n                        1\n                      ),\n                      index == 0\n                        ? _c(\"el-button\", {\n                            attrs: {\n                              slot: \"append\",\n                              icon: \"el-icon-circle-plus-outline\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.addTitles(index)\n                              }\n                            },\n                            slot: \"append\"\n                          })\n                        : _c(\"el-button\", {\n                            attrs: {\n                              slot: \"append\",\n                              icon: \"el-icon-remove-outline\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.removeTitles(title)\n                              }\n                            },\n                            slot: \"append\"\n                          })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            }),\n            0\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            \"hide-after\": 10000,\n            effect: \"dark\",\n            content:\n              \"Provides additional (human-readable) information based on a default language | string\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Description\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"desciption\" },\n                model: {\n                  value: _vm.form.description,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"description\", $$v)\n                  },\n                  expression: \"form.description\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            \"hide-after\": 10000,\n            effect: \"dark\",\n            content:\n              \"Can be used to support (human-readable) information in different languages | MultiLanguage\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Descriptions\" } },\n            _vm._l(_vm.form.descriptions, function(desc, index) {\n              return _c(\n                \"div\",\n                { key: index },\n                [\n                  _c(\n                    \"el-input\",\n                    {\n                      staticClass: \"input-with-select\",\n                      staticStyle: { \"padding-bottom\": \"2px\" },\n                      attrs: { placeholder: \"Please input\" },\n                      model: {\n                        value: desc.desciption,\n                        callback: function($$v) {\n                          _vm.$set(desc, \"desciption\", $$v)\n                        },\n                        expression: \"desc.desciption\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticStyle: { width: \"260px\" },\n                          attrs: { slot: \"prepend\", placeholder: \"Select\" },\n                          slot: \"prepend\",\n                          model: {\n                            value: desc.language,\n                            callback: function($$v) {\n                              _vm.$set(desc, \"language\", $$v)\n                            },\n                            expression: \"desc.language\"\n                          }\n                        },\n                        _vm._l(_vm.lng, function(l) {\n                          return _c(\"el-option\", {\n                            key: l.language,\n                            attrs: { label: l.label, value: l.value }\n                          })\n                        }),\n                        1\n                      ),\n                      index == 0\n                        ? _c(\"el-button\", {\n                            attrs: {\n                              slot: \"append\",\n                              icon: \"el-icon-circle-plus-outline\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.addDescriptions(index)\n                              }\n                            },\n                            slot: \"append\"\n                          })\n                        : _c(\"el-button\", {\n                            attrs: {\n                              slot: \"append\",\n                              icon: \"el-icon-remove-outline\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.removeDescriptions(desc)\n                              }\n                            },\n                            slot: \"append\"\n                          })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            }),\n            0\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            \"hide-after\": 10000,\n            effect: \"dark\",\n            content: \"Provides version information | VersionInfo\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Version\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"version\" },\n                model: {\n                  value: _vm.form.version,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"version\", $$v)\n                  },\n                  expression: \"form.version\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            \"hide-after\": 10000,\n            effect: \"dark\",\n            content:\n              \"Define the base URI that is used for all relative URI references throughout a TD document. In TD instances, all relative URIs are resolved relative to the base URI using the algorithm | anyURI\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Base\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"base\" },\n                model: {\n                  value: _vm.form.base,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"base\", $$v)\n                  },\n                  expression: \"form.base\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-tooltip\",\n        {\n          staticClass: \"item\",\n          attrs: {\n            \"open-delay\": 1000,\n            \"hide-after\": 10000,\n            effect: \"dark\",\n            content:\n              \"Provides Web links to arbitrary resources that relate to the specified Thing Description | Array of Link\",\n            placement: \"top-start\"\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { label: \"Links\" } },\n            [\n              _c(\"el-input\", {\n                attrs: { placeholder: \"links\" },\n                model: {\n                  value: _vm.form.links,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"links\", $$v)\n                  },\n                  expression: \"form.links\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"span\", [_vm._v(\"Thing Properties\")]),\n      _c(\"el-divider\"),\n      _vm._l(_vm.form.properties, function(property, index) {\n        return _c(\n          \"el-form\",\n          {\n            key: property.key,\n            ref: \"form\",\n            refInFor: true,\n            attrs: {\n              prop: \"properties.\" + index + \".value\",\n              model: _vm.form,\n              \"label-width\": \"160px\"\n            }\n          },\n          [\n            _c(\"br\"),\n            _c(\"span\", [_vm._v(\"property \" + _vm._s(index + 1) + \" \")]),\n            _c(\n              \"el-button\",\n              {\n                staticStyle: { \"padding-left\": \"10px\" },\n                attrs: { type: \"danger\", size: \"mini\" },\n                on: {\n                  click: function($event) {\n                    $event.preventDefault()\n                    return _vm.removeProperty(property)\n                  }\n                }\n              },\n              [_vm._v(\"delete\")]\n            ),\n            _c(\"br\"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Property name\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"name\" },\n                  model: {\n                    value: property.name,\n                    callback: function($$v) {\n                      _vm.$set(property, \"name\", $$v)\n                    },\n                    expression: \"property.name\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Property title\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"title\" },\n                  model: {\n                    value: property.title,\n                    callback: function($$v) {\n                      _vm.$set(property, \"title\", $$v)\n                    },\n                    expression: \"property.title\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Property description\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"description\" },\n                  model: {\n                    value: property.description,\n                    callback: function($$v) {\n                      _vm.$set(property, \"description\", $$v)\n                    },\n                    expression: \"property.description\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._l(property.forms, function(form, ind) {\n              return _c(\n                \"el-form\",\n                {\n                  key: \"forms.\" + ind + \".value\",\n                  ref: \"form\",\n                  refInFor: true,\n                  attrs: {\n                    prop: \"forms.\" + ind + \".value\",\n                    model: form,\n                    \"label-width\": \"160px\"\n                  }\n                },\n                [\n                  _c(\"br\"),\n                  _c(\"span\", [\n                    _vm._v(\n                      \"property \" +\n                        _vm._s(index + 1) +\n                        \" form \" +\n                        _vm._s(ind + 1) +\n                        \" \"\n                    )\n                  ]),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticStyle: { \"padding-left\": \"10px\" },\n                      attrs: { type: \"danger\", size: \"small\" },\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.removeForm(index, form)\n                        }\n                      }\n                    },\n                    [_vm._v(\"delete\")]\n                  ),\n                  _c(\"br\"),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Link\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"href\" },\n                        model: {\n                          value: form.href,\n                          callback: function($$v) {\n                            _vm.$set(form, \"href\", $$v)\n                          },\n                          expression: \"form.href\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Operation\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticClass: \"op-select\",\n                          attrs: { multiple: \"\", placeholder: \"op\" },\n                          model: {\n                            value: form.op,\n                            callback: function($$v) {\n                              _vm.$set(form, \"op\", $$v)\n                            },\n                            expression: \"form.op\"\n                          }\n                        },\n                        [\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readproperty\",\n                              value: \"readproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writeproperty\",\n                              value: \"writeproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"observeproperty\",\n                              value: \"observeproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"unobserveproperty\",\n                              value: \"unobserveproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"invokeaction\",\n                              value: \"invokeaction\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"subscribeevent\",\n                              value: \"subscribeevent\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"unsubscribeevent\",\n                              value: \"unsubscribeevent\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readallproperties\",\n                              value: \"readallproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writeallproperties\",\n                              value: \"writeallproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readmultipleproperties\",\n                              value: \"readmultipleproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writemultipleproperties\",\n                              value: \"writemultipleproperties\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"contentType\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"contentType\" },\n                        model: {\n                          value: form.contentType,\n                          callback: function($$v) {\n                            _vm.$set(form, \"contentType\", $$v)\n                          },\n                          expression: \"form.contentType\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Secure\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"Secure\" },\n                          model: {\n                            value: form.secure,\n                            callback: function($$v) {\n                              _vm.$set(form, \"secure\", $$v)\n                            },\n                            expression: \"form.secure\"\n                          }\n                        },\n                        _vm._l(_vm.security, function(sec) {\n                          return _c(\"el-option\", {\n                            key: sec.value,\n                            attrs: { label: sec.label, value: sec.value }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            }),\n            _c(\n              \"el-button\",\n              {\n                attrs: { size: \"mini\" },\n                on: {\n                  click: function($event) {\n                    return _vm.addPropertyForm(index)\n                  }\n                }\n              },\n              [_vm._v(\"Add form to property\")]\n            ),\n            _c(\"br\")\n          ],\n          2\n        )\n      }),\n      _c(\"br\"),\n      _c(\"el-button\", { on: { click: _vm.addProperty } }, [\n        _vm._v(\"Add property\")\n      ]),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"span\", [_vm._v(\"Thing Actions\")]),\n      _c(\"el-divider\"),\n      _vm._l(_vm.form.actions, function(action, index) {\n        return _c(\n          \"el-form\",\n          {\n            key: \"action\" + index + \".value\",\n            ref: \"form\",\n            refInFor: true,\n            attrs: {\n              prop: \"properties.\" + index + \".value\",\n              model: _vm.form,\n              \"label-width\": \"160px\"\n            }\n          },\n          [\n            _c(\"br\"),\n            _c(\"span\", [_vm._v(\"action \" + _vm._s(index + 1) + \" \")]),\n            _c(\n              \"el-button\",\n              {\n                attrs: { type: \"danger\", size: \"mini\" },\n                on: {\n                  click: function($event) {\n                    $event.preventDefault()\n                    return _vm.removeAction(action)\n                  }\n                }\n              },\n              [_vm._v(\"delete\")]\n            ),\n            _c(\"br\"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Action name\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"name\" },\n                  model: {\n                    value: action.name,\n                    callback: function($$v) {\n                      _vm.$set(action, \"name\", $$v)\n                    },\n                    expression: \"action.name\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Action title\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"title\" },\n                  model: {\n                    value: action.title,\n                    callback: function($$v) {\n                      _vm.$set(action, \"title\", $$v)\n                    },\n                    expression: \"action.title\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Action description\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"description\" },\n                  model: {\n                    value: action.desc,\n                    callback: function($$v) {\n                      _vm.$set(action, \"desc\", $$v)\n                    },\n                    expression: \"action.desc\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._l(action.forms, function(form, ind) {\n              return _c(\n                \"el-form\",\n                {\n                  key: \"properties.\" + ind + \".value\",\n                  ref: \"form\",\n                  refInFor: true,\n                  attrs: {\n                    prop: \"properties.\" + ind + \".value\",\n                    model: form,\n                    \"label-width\": \"160px\"\n                  }\n                },\n                [\n                  _c(\"br\"),\n                  _c(\"span\", [\n                    _vm._v(\n                      \"action \" +\n                        _vm._s(index + 1) +\n                        \" form \" +\n                        _vm._s(ind + 1) +\n                        \" \"\n                    )\n                  ]),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticStyle: { \"padding-left\": \"10px\" },\n                      attrs: { type: \"danger\", size: \"small\" },\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.removeActionForm(index, form)\n                        }\n                      }\n                    },\n                    [_vm._v(\"delete\")]\n                  ),\n                  _c(\"br\"),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Link\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"href\" },\n                        model: {\n                          value: form.href,\n                          callback: function($$v) {\n                            _vm.$set(form, \"href\", $$v)\n                          },\n                          expression: \"form.href\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Operation\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticClass: \"op-select\",\n                          attrs: { multiple: \"\", placeholder: \"op\" },\n                          model: {\n                            value: form.op,\n                            callback: function($$v) {\n                              _vm.$set(form, \"op\", $$v)\n                            },\n                            expression: \"form.op\"\n                          }\n                        },\n                        [\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readproperty\",\n                              value: \"readproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writeproperty\",\n                              value: \"writeproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"observeproperty\",\n                              value: \"observeproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"unobserveproperty\",\n                              value: \"unobserveproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"invokeaction\",\n                              value: \"invokeaction\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"subscribeevent\",\n                              value: \"subscribeevent\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"unsubscribeevent\",\n                              value: \"unsubscribeevent\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readallproperties\",\n                              value: \"readallproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writeallproperties\",\n                              value: \"writeallproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readmultipleproperties\",\n                              value: \"readmultipleproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writemultipleproperties\",\n                              value: \"writemultipleproperties\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"contentType\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"contentType\" },\n                        model: {\n                          value: form.contentType,\n                          callback: function($$v) {\n                            _vm.$set(form, \"contentType\", $$v)\n                          },\n                          expression: \"form.contentType\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Secure\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"Secure\" },\n                          model: {\n                            value: form.secure,\n                            callback: function($$v) {\n                              _vm.$set(form, \"secure\", $$v)\n                            },\n                            expression: \"form.secure\"\n                          }\n                        },\n                        _vm._l(form.security, function(sec) {\n                          return _c(\"el-option\", {\n                            key: sec.value,\n                            attrs: { label: sec.label, value: sec.value }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            }),\n            _c(\n              \"el-button\",\n              {\n                attrs: { size: \"mini\" },\n                on: {\n                  click: function($event) {\n                    return _vm.addActionForm(index)\n                  }\n                }\n              },\n              [_vm._v(\"Add form to action\")]\n            ),\n            _c(\"br\")\n          ],\n          2\n        )\n      }),\n      _c(\"el-button\", { on: { click: _vm.addActions } }, [\n        _vm._v(\"Add action\")\n      ]),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"span\", [_vm._v(\"Thing Events\")]),\n      _c(\"el-divider\"),\n      _vm._l(_vm.form.events, function(event, index) {\n        return _c(\n          \"el-form\",\n          {\n            key: \"event.\" + index + \".value\",\n            ref: \"form\",\n            refInFor: true,\n            attrs: {\n              prop: \"event.\" + index + \".value\",\n              model: _vm.form,\n              \"label-width\": \"160px\"\n            }\n          },\n          [\n            _c(\"br\"),\n            _c(\"span\", [_vm._v(\"event \" + _vm._s(index + 1) + \" \")]),\n            _c(\n              \"el-button\",\n              {\n                attrs: { type: \"danger\", size: \"mini\" },\n                on: {\n                  click: function($event) {\n                    $event.preventDefault()\n                    return _vm.removeEvent(event)\n                  }\n                }\n              },\n              [_vm._v(\"delete\")]\n            ),\n            _c(\"br\"),\n            _c(\"br\"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Event name\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"name\" },\n                  model: {\n                    value: event.name,\n                    callback: function($$v) {\n                      _vm.$set(event, \"name\", $$v)\n                    },\n                    expression: \"event.name\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Event title\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"title\" },\n                  model: {\n                    value: event.title,\n                    callback: function($$v) {\n                      _vm.$set(event, \"title\", $$v)\n                    },\n                    expression: \"event.title\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Event description\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"description\" },\n                  model: {\n                    value: event.desc,\n                    callback: function($$v) {\n                      _vm.$set(event, \"desc\", $$v)\n                    },\n                    expression: \"event.desc\"\n                  }\n                })\n              ],\n              1\n            ),\n            _vm._l(event.forms, function(form, ind) {\n              return _c(\n                \"el-form\",\n                {\n                  key: \"events.\" + ind + \".value\",\n                  ref: \"form\",\n                  refInFor: true,\n                  attrs: {\n                    prop: \"events.\" + ind + \".value\",\n                    model: form,\n                    \"label-width\": \"160px\"\n                  }\n                },\n                [\n                  _c(\"br\"),\n                  _c(\"span\", [\n                    _vm._v(\n                      \"event \" +\n                        _vm._s(index + 1) +\n                        \" form \" +\n                        _vm._s(ind + 1) +\n                        \" \"\n                    )\n                  ]),\n                  _c(\n                    \"el-button\",\n                    {\n                      staticStyle: { \"padding-left\": \"10px\" },\n                      attrs: { type: \"danger\", size: \"small\" },\n                      on: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.removeEventForm(index, form)\n                        }\n                      }\n                    },\n                    [_vm._v(\"delete\")]\n                  ),\n                  _c(\"br\"),\n                  _c(\"br\"),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Link\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"href\" },\n                        model: {\n                          value: form.href,\n                          callback: function($$v) {\n                            _vm.$set(form, \"href\", $$v)\n                          },\n                          expression: \"form.href\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Operation\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          staticClass: \"op-select\",\n                          attrs: { multiple: \"\", placeholder: \"op\" },\n                          model: {\n                            value: form.op,\n                            callback: function($$v) {\n                              _vm.$set(form, \"op\", $$v)\n                            },\n                            expression: \"form.op\"\n                          }\n                        },\n                        [\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readproperty\",\n                              value: \"readproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writeproperty\",\n                              value: \"writeproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"observeproperty\",\n                              value: \"observeproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"unobserveproperty\",\n                              value: \"unobserveproperty\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"invokeaction\",\n                              value: \"invokeaction\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"subscribeevent\",\n                              value: \"subscribeevent\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"unsubscribeevent\",\n                              value: \"unsubscribeevent\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readallproperties\",\n                              value: \"readallproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writeallproperties\",\n                              value: \"writeallproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"readmultipleproperties\",\n                              value: \"readmultipleproperties\"\n                            }\n                          }),\n                          _c(\"el-option\", {\n                            attrs: {\n                              label: \"writemultipleproperties\",\n                              value: \"writemultipleproperties\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"contentType\" } },\n                    [\n                      _c(\"el-input\", {\n                        attrs: { placeholder: \"contentType\" },\n                        model: {\n                          value: form.contentType,\n                          callback: function($$v) {\n                            _vm.$set(form, \"contentType\", $$v)\n                          },\n                          expression: \"form.contentType\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"Secure\" } },\n                    [\n                      _c(\n                        \"el-select\",\n                        {\n                          attrs: { placeholder: \"Secure\" },\n                          model: {\n                            value: form.secure,\n                            callback: function($$v) {\n                              _vm.$set(form, \"secure\", $$v)\n                            },\n                            expression: \"form.secure\"\n                          }\n                        },\n                        _vm._l(_vm.security, function(sec) {\n                          return _c(\"el-option\", {\n                            key: sec.value,\n                            attrs: { label: sec.label, value: sec.value }\n                          })\n                        }),\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            }),\n            _c(\n              \"el-button\",\n              {\n                attrs: { size: \"mini\" },\n                on: {\n                  click: function($event) {\n                    return _vm.addEventForm(index)\n                  }\n                }\n              },\n              [_vm._v(\"Add form to event\")]\n            ),\n            _c(\"br\"),\n            _c(\"br\")\n          ],\n          2\n        )\n      }),\n      _c(\"el-button\", { on: { click: _vm.addEvents } }, [_vm._v(\"Add event\")]),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"span\", [_vm._v(\"Forms\")]),\n      _c(\"el-divider\"),\n      _vm._l(_vm.form.forms, function(form, ind) {\n        return _c(\n          \"el-form\",\n          {\n            key: \"properties.\" + ind + \".value\",\n            ref: \"form\",\n            refInFor: true,\n            attrs: {\n              prop: \"properties.\" + ind + \".value\",\n              model: form,\n              \"label-width\": \"160px\"\n            }\n          },\n          [\n            _c(\"br\"),\n            _c(\"span\", [_vm._v(\"thing form \" + _vm._s(ind + 1) + \" \")]),\n            _c(\n              \"el-button\",\n              {\n                staticStyle: { \"padding-left\": \"10px\" },\n                attrs: { type: \"danger\", size: \"small\" },\n                on: {\n                  click: function($event) {\n                    $event.preventDefault()\n                    return _vm.removeForm(ind, form)\n                  }\n                }\n              },\n              [_vm._v(\"delete\")]\n            ),\n            _c(\"br\"),\n            _c(\"br\"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Link\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"href\" },\n                  model: {\n                    value: form.href,\n                    callback: function($$v) {\n                      _vm.$set(form, \"href\", $$v)\n                    },\n                    expression: \"form.href\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Operation\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    staticClass: \"op-select\",\n                    attrs: { multiple: \"\", placeholder: \"op\" },\n                    model: {\n                      value: form.op,\n                      callback: function($$v) {\n                        _vm.$set(form, \"op\", $$v)\n                      },\n                      expression: \"form.op\"\n                    }\n                  },\n                  [\n                    _c(\"el-option\", {\n                      attrs: { label: \"readproperty\", value: \"readproperty\" }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: { label: \"writeproperty\", value: \"writeproperty\" }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: {\n                        label: \"observeproperty\",\n                        value: \"observeproperty\"\n                      }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: {\n                        label: \"unobserveproperty\",\n                        value: \"unobserveproperty\"\n                      }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: { label: \"invokeaction\", value: \"invokeaction\" }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: {\n                        label: \"subscribeevent\",\n                        value: \"subscribeevent\"\n                      }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: {\n                        label: \"unsubscribeevent\",\n                        value: \"unsubscribeevent\"\n                      }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: {\n                        label: \"readallproperties\",\n                        value: \"readallproperties\"\n                      }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: {\n                        label: \"writeallproperties\",\n                        value: \"writeallproperties\"\n                      }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: {\n                        label: \"readmultipleproperties\",\n                        value: \"readmultipleproperties\"\n                      }\n                    }),\n                    _c(\"el-option\", {\n                      attrs: {\n                        label: \"writemultipleproperties\",\n                        value: \"writemultipleproperties\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"contentType\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"contentType\" },\n                  model: {\n                    value: form.contentType,\n                    callback: function($$v) {\n                      _vm.$set(form, \"contentType\", $$v)\n                    },\n                    expression: \"form.contentType\"\n                  }\n                })\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Secure\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    attrs: { placeholder: \"Secure\" },\n                    model: {\n                      value: form.secure,\n                      callback: function($$v) {\n                        _vm.$set(form, \"secure\", $$v)\n                      },\n                      expression: \"form.secure\"\n                    }\n                  },\n                  _vm._l(_vm.security, function(sec) {\n                    return _c(\"el-option\", {\n                      key: sec.value,\n                      attrs: { label: sec.label, value: sec.value }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      }),\n      _c(\"el-button\", { on: { click: _vm.addForm } }, [\n        _vm._v(\"Add form to thing\")\n      ]),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"br\"),\n      _c(\"span\", [_vm._v(\"Security\")]),\n      _c(\"el-divider\"),\n      _c(\n        \"el-form-item\",\n        { attrs: { label: \"Security\" } },\n        [\n          _c(\n            \"el-select\",\n            {\n              staticStyle: { width: \"100%\" },\n              attrs: { multiple: \"\", placeholder: \"security\" },\n              model: {\n                value: _vm.form.security,\n                callback: function($$v) {\n                  _vm.$set(_vm.form, \"security\", $$v)\n                },\n                expression: \"form.security\"\n              }\n            },\n            _vm._l(_vm.security, function(sec) {\n              return _c(\"el-option\", {\n                key: sec.value,\n                attrs: { label: sec.label, value: sec.value }\n              })\n            }),\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"el-button\", { on: { click: _vm.addSecurityDefinitions } }, [\n        _vm._v(\"Add Security Definitions\")\n      ]),\n      _c(\"br\"),\n      _c(\"br\"),\n      _vm._l(_vm.form.securityDefinitions, function(secDef, index) {\n        return _c(\n          \"el-form\",\n          { key: index, attrs: { \"label-width\": \"160px\" } },\n          [\n            _c(\"br\"),\n            _c(\"span\", [\n              _vm._v(\"Security Definitions \" + _vm._s(secDef.scheme))\n            ]),\n            _c(\"br\"),\n            _c(\"br\"),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Security Definitions\" } },\n              [\n                _c(\n                  \"el-select\",\n                  {\n                    staticStyle: { width: \"100%\" },\n                    attrs: { placeholder: \"security\" },\n                    model: {\n                      value: secDef.scheme,\n                      callback: function($$v) {\n                        _vm.$set(secDef, \"scheme\", $$v)\n                      },\n                      expression: \"secDef.scheme\"\n                    }\n                  },\n                  _vm._l(_vm.security, function(sec) {\n                    return _c(\"el-option\", {\n                      key: sec.value,\n                      attrs: { label: sec.label, value: sec.value }\n                    })\n                  }),\n                  1\n                )\n              ],\n              1\n            ),\n            _c(\n              \"el-form-item\",\n              { attrs: { label: \"Description\" } },\n              [\n                _c(\"el-input\", {\n                  attrs: { placeholder: \"description\" },\n                  model: {\n                    value: secDef.description,\n                    callback: function($$v) {\n                      _vm.$set(secDef, \"description\", $$v)\n                    },\n                    expression: \"secDef.description\"\n                  }\n                })\n              ],\n              1\n            ),\n            secDef.scheme == \"basic_sc\"\n              ? _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content:\n                            \"Specifies the location of security authentication information | string\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"in\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                staticStyle: { width: \"100%\" },\n                                attrs: { placeholder: \"location\" },\n                                model: {\n                                  value: secDef.securityDefinitions,\n                                  callback: function($$v) {\n                                    _vm.$set(secDef, \"securityDefinitions\", $$v)\n                                  },\n                                  expression: \"secDef.securityDefinitions\"\n                                }\n                              },\n                              _vm._l(_vm.locsec, function(lc) {\n                                return _c(\"el-option\", {\n                                  key: lc.value,\n                                  attrs: { label: lc.label, value: lc.value }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content:\n                            \"Name for query, header, or cookie parameters | string\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"name\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"name\" },\n                              model: {\n                                value: secDef.name,\n                                callback: function($$v) {\n                                  _vm.$set(secDef, \"name\", $$v)\n                                },\n                                expression: \"secDef.name\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              : _vm._e(),\n            secDef.scheme == \"apikey_sc\"\n              ? _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content:\n                            \"Specifies the location of security authentication information | string\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"in\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                staticStyle: { width: \"100%\" },\n                                attrs: { placeholder: \"location\" },\n                                model: {\n                                  value: secDef.securityDefinitions,\n                                  callback: function($$v) {\n                                    _vm.$set(secDef, \"securityDefinitions\", $$v)\n                                  },\n                                  expression: \"secDef.securityDefinitions\"\n                                }\n                              },\n                              _vm._l(_vm.locsec, function(lc) {\n                                return _c(\"el-option\", {\n                                  key: lc.value,\n                                  attrs: { label: lc.label, value: lc.value }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content:\n                            \"Name for query, header, or cookie parameters | string\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"name\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"name\" },\n                              model: {\n                                value: secDef.name,\n                                callback: function($$v) {\n                                  _vm.$set(secDef, \"name\", $$v)\n                                },\n                                expression: \"secDef.name\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              : _vm._e(),\n            secDef.scheme == \"oauth2_sc\"\n              ? _c(\n                  \"div\",\n                  [\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content: \"URI of the authorization server | anyURI\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"authorization\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"authorization\" },\n                              model: {\n                                value: secDef.authorization,\n                                callback: function($$v) {\n                                  _vm.$set(secDef, \"authorization\", $$v)\n                                },\n                                expression: \"secDef.authorization\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content: \"token | anyURI\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"token\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"token\" },\n                              model: {\n                                value: secDef.token,\n                                callback: function($$v) {\n                                  _vm.$set(secDef, \"token\", $$v)\n                                },\n                                expression: \"secDef.token\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content: \"URI of the refresh server | anyURI\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"refresh\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"refresh\" },\n                              model: {\n                                value: secDef.refresh,\n                                callback: function($$v) {\n                                  _vm.$set(secDef, \"refresh\", $$v)\n                                },\n                                expression: \"secDef.refresh\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content:\n                            \"Set of authorization scope identifiers provided as an array | string or Array of string\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"scopes\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"scopes\" },\n                              model: {\n                                value: secDef.scopes,\n                                callback: function($$v) {\n                                  _vm.$set(secDef, \"scopes\", $$v)\n                                },\n                                expression: \"secDef.scopes\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _c(\n                      \"el-tooltip\",\n                      {\n                        staticClass: \"item\",\n                        attrs: {\n                          \"open-delay\": 1000,\n                          \"hide-after\": 10000,\n                          effect: \"dark\",\n                          content: \"Authorization flow | anyURI\",\n                          placement: \"top-start\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"flow\" } },\n                          [\n                            _c(\"el-input\", {\n                              attrs: { placeholder: \"flow\" },\n                              model: {\n                                value: secDef.flow,\n                                callback: function($$v) {\n                                  _vm.$set(secDef, \"flow\", $$v)\n                                },\n                                expression: \"secDef.flow\"\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              : _vm._e()\n          ],\n          1\n        )\n      }),\n      _c(\"v-jsoneditor\", {\n        attrs: { plus: false, height: \"400px\" },\n        model: {\n          value: _vm.mapperTDfromForm,\n          callback: function($$v) {\n            _vm.mapperTDfromForm = $$v\n          },\n          expression: \"mapperTDfromForm\"\n        }\n      }),\n      _c(\"br\"),\n      _c(\n        \"el-button\",\n        { attrs: { type: \"primary\" }, on: { click: _vm.onSubmit } },\n        [_vm._v(\"Create TD\")]\n      ),\n      _c(\"el-button\", { attrs: { type: \"danger\" } }, [_vm._v(\"Cancel\")])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}