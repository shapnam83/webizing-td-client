{"remainingRequest":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/src/components/ThingPropertiesID.vue?vue&type=template&id=6cb4db9c&scoped=true&","dependencies":[{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/src/components/ThingPropertiesID.vue","mtime":1629318106811},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1570969765705},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js","mtime":1570969765705}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return !_vm.loading\n    ? _c(\n        \"div\",\n        [\n          _c(\"span\", { staticStyle: { \"font-size\": \"20px\" } }, [\n            _vm._v(\"\\n      \" + _vm._s(_vm.property.title) + \"\\n    \")\n          ]),\n          _c(\n            \"p\",\n            [\n              _vm._v(\"Type of:\\n    [ \"),\n              _c(\n                \"el-link\",\n                {\n                  attrs: {\n                    href: _vm.thingDescriptionPropertyURL(),\n                    type: \"primary\"\n                  }\n                },\n                [_vm._v(_vm._s(_vm.property.title))]\n              ),\n              _vm._v(\" ]\\n  \")\n            ],\n            1\n          ),\n          _c(\"h3\", [_vm._v(\"Property details\")]),\n          _c(\"p\", [_vm._v(_vm._s(_vm.property.description))]),\n          _c(\"p\", [\n            _c(\"b\", [_vm._v(\"Type:\")]),\n            _vm._v(\" \" + _vm._s(_vm.property.type))\n          ]),\n          _vm.property.type === \"array\"\n            ? _c(\"p\", [\n                _c(\"b\", [_vm._v(\"Items:\")]),\n                _vm._v(\" \" + _vm._s(_vm.property.items) + \"\\n  \")\n              ])\n            : _vm._e(),\n          _c(\"p\", [\n            _c(\"b\", [_vm._v(\"Read only:\")]),\n            _vm._v(\" \" + _vm._s(_vm.property.readOnly))\n          ]),\n          _c(\"p\", [\n            _c(\"b\", [_vm._v(\"Observable:\")]),\n            _vm._v(\" \" + _vm._s(_vm.property.observable))\n          ]),\n          _c(\"p\", [\n            _c(\"b\", [_vm._v(\"Write only:\")]),\n            _vm._v(\" \" + _vm._s(_vm.property.writeOnly))\n          ]),\n          _vm.uriVariables.length !== 0\n            ? _c(\"h3\", [_vm._v(\"Uri Variables\")])\n            : _vm._e(),\n          _vm.uriVariables.length !== 0\n            ? _c(\n                \"el-table\",\n                {\n                  staticStyle: { width: \"100%\" },\n                  attrs: { data: _vm.uriVariables, border: \"\" }\n                },\n                [\n                  _c(\"el-table-column\", {\n                    attrs: {\n                      prop: \"name\",\n                      label: \"Name of variable\",\n                      width: \"520\"\n                    }\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"typeOf\", label: \"Type of\" },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              _c(\n                                \"el-link\",\n                                {\n                                  attrs: {\n                                    href: _vm.ontologyLink(scope.row.typeOf),\n                                    type: \"primary\"\n                                  }\n                                },\n                                [_vm._v(_vm._s(scope.row.typeOf))]\n                              )\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      2907774431\n                    )\n                  }),\n                  _c(\"el-table-column\", {\n                    attrs: { prop: \"type\", label: \"type\" }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _c(\"h3\", [_vm._v(\"Forms\")]),\n          _c(\n            \"el-table\",\n            {\n              staticStyle: { width: \"100%\" },\n              attrs: { data: _vm.property.forms, border: \"\" }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: { prop: \"href\", label: \"URL\", width: \"520\" }\n              }),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"contentType\", label: \"Content Type\" }\n              }),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"op\", label: \"Operation\" }\n              }),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"secure\", label: \"Access\" }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}