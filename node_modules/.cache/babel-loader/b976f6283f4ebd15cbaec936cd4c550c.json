{"remainingRequest":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/thread-loader/dist/cjs.js!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/babel-loader/lib/index.js!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alexander/Projects/GitHub/webizing-td-client/src/components/ThingPropertiesID.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/src/components/ThingPropertiesID.vue","mtime":1629318106811},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/thread-loader/dist/cjs.js","mtime":1570969765657},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/babel-loader/lib/index.js","mtime":1587543893999},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/cache-loader/dist/cjs.js","mtime":1570966921308},{"path":"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/vue-loader/lib/index.js","mtime":1570969765705}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Users/alexander/Projects/GitHub/webizing-td-client/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"ThingPropertyDetails\",\n  data: function data() {\n    return {\n      context: \"https://schema.org/\"\n    };\n  },\n  computed: _objectSpread({\n    property: function property() {\n      if (!this.loading) return this.$store.getters.getPropertyDetailsOfSensor(this.$route.params.thing, this.$route.params.name);\n    },\n    uriVariables: function uriVariables() {\n      var property = this.$store.getters.getPropertyDetailsOfSensor(this.$route.params.thing, this.$route.params.name);\n\n      if (property.hasOwnProperty('uriVariables')) {\n        var output = [];\n        var obj = property.uriVariables;\n\n        for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n          var key = _Object$keys[_i];\n          output.push({\n            name: key,\n            typeOf: obj[key]['@type'],\n            type: obj[key].type\n          });\n        }\n\n        return output;\n      }\n\n      return [];\n    }\n  }, mapState({\n    loading: function loading(state) {\n      return state.things.loading;\n    },\n    error: function error(state) {\n      return state.things.error;\n    }\n  })),\n  methods: {\n    thingDescriptionPropertyURL: function thingDescriptionPropertyURL() {\n      return \"\".concat(this.context).concat(this.property[\"@type\"].split(':')[1]);\n    },\n    ontologyLink: function ontologyLink(param) {\n      return \"\".concat(this.context).concat(param);\n    }\n  }\n};",{"version":3,"sources":["ThingPropertiesID.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,sBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,QAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,CAAA,KAAA,OAAA,EACA,OAAA,KAAA,MAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,KAJA;AAKA,IAAA,YALA,0BAKA;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,KAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,IAAA,CAAA;;AACA,UAAA,QAAA,CAAA,cAAA,CAAA,cAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,EAAA;AACA,YAAA,GAAA,GAAA,QAAA,CAAA,YAAA;;AAEA,wCAAA,MAAA,CAAA,IAAA,CAAA,GAAA,CAAA,kCAAA;AAAA,cAAA,GAAA,mBAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,GADA;AAEA,YAAA,MAAA,EAAA,GAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAFA;AAGA,YAAA,IAAA,EAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AAHA,WAAA;AAKA;;AAEA,eAAA,MAAA;AACA;;AACA,aAAA,EAAA;AACA;AAtBA,KAuBA,QAAA,CAAA;AACA,IAAA,OAAA,EAAA,iBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,MAAA,CAAA,OAAA;AAAA,KADA;AAEA,IAAA,KAAA,EAAA,eAAA,KAAA;AAAA,aAAA,KAAA,CAAA,MAAA,CAAA,KAAA;AAAA;AAFA,GAAA,CAvBA,CAPA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,2BAAA,EAAA,uCAAA;AACA,uBAAA,KAAA,OAAA,SAAA,KAAA,QAAA,CAAA,OAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,YAAA,EAAA,sBAAA,KAAA,EAAA;AACA,uBAAA,KAAA,OAAA,SAAA,KAAA;AACA;AANA;AAnCA,CAAA","sourcesContent":["<template>\n    <div v-if=\"!loading\">\n      <span style=\"font-size: 20px\">\n          {{ property.title }}\n        </span>\n      <p>Type of:\n        [ <el-link\n                v-bind:href=\"thingDescriptionPropertyURL()\"\n                type=\"primary\"\n        >{{property.title}}</el-link> ]\n      </p>\n\n      <h3>Property details</h3>\n      <p>{{ property.description }}</p>\n\n      <p><b>Type:</b> {{ property.type }}</p>\n      <p v-if=\"property.type==='array'\">\n        <b>Items:</b> {{ property.items }}\n      </p>\n      <p><b>Read only:</b> {{ property.readOnly }}</p>\n      <p><b>Observable:</b> {{ property.observable }}</p>\n      <p><b>Write only:</b> {{ property.writeOnly }}</p>\n\n      <h3 v-if=\"uriVariables.length !== 0\">Uri Variables</h3>\n\n      <el-table :data=\"uriVariables\" v-if=\"uriVariables.length !== 0\" border style=\"width: 100%\">\n        <el-table-column prop=\"name\" label=\"Name of variable\" width=\"520\"></el-table-column>\n        <el-table-column prop=\"typeOf\" label=\"Type of\">\n          <template slot-scope=\"scope\">\n            <el-link\n                    v-bind:href=\"ontologyLink(scope.row.typeOf)\"\n                    type=\"primary\"\n            >{{scope.row.typeOf}}</el-link>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"type\" label=\"type\"> </el-table-column>\n      </el-table>\n\n      <h3>Forms</h3>\n\n      <el-table :data=\"property.forms\" border style=\"width: 100%\">\n        <el-table-column prop=\"href\" label=\"URL\" width=\"520\"></el-table-column>\n        <el-table-column prop=\"contentType\" label=\"Content Type\"></el-table-column>\n        <el-table-column prop=\"op\" label=\"Operation\"> </el-table-column>\n        <el-table-column prop=\"secure\" label=\"Access\"> </el-table-column>\n      </el-table>\n    </div>\n</template>\n\n<script>\n\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"ThingPropertyDetails\",\n  data() {\n    return {\n      context: \"https://schema.org/\"\n    };\n  },\n  computed: {\n    property () {\n      if(!this.loading)\n        return this.$store.getters.getPropertyDetailsOfSensor(this.$route.params.thing, this.$route.params.name)\n    },\n    uriVariables () {\n      const property = this.$store.getters.getPropertyDetailsOfSensor(this.$route.params.thing, this.$route.params.name);\n      if (property.hasOwnProperty('uriVariables')) {\n        let output = [];\n        const obj = property.uriVariables;\n\n        for (const key of Object.keys(obj)) {\n          output.push({\n            name: key,\n            typeOf: obj[key]['@type'],\n            type: obj[key].type\n          });\n        }\n\n        return output;\n      }\n      return []\n    },\n    ...mapState({\n      loading: state => state.things.loading,\n      error: state => state.things.error\n    })\n  },\n  methods: {\n    thingDescriptionPropertyURL: function() {\n      return `${this.context}${this.property[\"@type\"].split(':')[1]}`;\n    },\n    ontologyLink: function(param) {\n      return `${this.context}${param}`;\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"],"sourceRoot":"src/components"}]}